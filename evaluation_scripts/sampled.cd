@Override public void shutdown(){\n  processServerShutdown(null);\n  try {\n    writer.flush();\n    writer.close();\n  }\n catch (  Exception e) {\n    errorHandler.handleCloseError(e);\n  }\n}\n
public DERSequence(ASN1Encodable obj){\n  super(obj);\n}\n
private boolean breakKeepAliveLoop(SocketWrapperBase<?> socketWrapper){\n  openSocket=keepAlive;\n  if (sendfileData != null && !getErrorState().isError()) {\n    sendfileData.keepAlive=keepAlive;\nswitch (socketWrapper.processSendfile(sendfileData)) {\ncase DONE:\n      sendfileData=null;\n    return false;\ncase PENDING:\n  return true;\ncase ERROR:\nif (log.isDebugEnabled()) {\n  log.debug(sm.getString(\"http11processor.sendfile.error\"));\n}\nsetErrorState(ErrorState.CLOSE_CONNECTION_NOW,null);\nreturn true;\n}\n}\nreturn false;\n}\n
public final TreeSet<BrdAbitPin> touching_pins_at_end_corners(){\n  TreeSet<BrdAbitPin> result=new TreeSet<BrdAbitPin>();\n  touching_pins_at_end_corners(result,corner_first());\n  touching_pins_at_end_corners(result,corner_last());\n  return result;\n}\n
public boolean isIs(){\n  return is;\n}\n
public void logRequestInfo(HTTPRequestInfo requestInfo){\n}\n
@Override public int show(final FragmentTransaction transaction,final String tag){\n  return delegate.show(transaction,tag);\n}\n
public static void registerBackendInitializationListener(BackendInitializationListener listener){\n  directoryServer.backendInitializationListeners.add(listener);\n}\n
public void testAndNotPosPosFirstLonger(){\n  byte aBytes[]={-128,9,56,100,-2,-76,89,45,91,3,-15,35,26,-117,23,87,-25,-75};\n  byte bBytes[]={-2,-3,-4,-4,5,14,23,39,48,57,66,5,14,23};\n  int aSign=1;\n  int bSign=1;\n  byte rBytes[]={0,-128,9,56,100,0,0,1,1,90,1,-32,0,10,-126,21,82,-31,-96};\n  BigInteger aNumber=new BigInteger(aSign,aBytes);\n  BigInteger bNumber=new BigInteger(bSign,bBytes);\n  BigInteger result=aNumber.andNot(bNumber);\n  byte resBytes[]=new byte[rBytes.length];\n  resBytes=result.toByteArray();\n  for (int i=0; i < resBytes.length; i++) {\n    assertTrue(resBytes[i] == rBytes[i]);\n  }\n  assertEquals(\"incorrect sign\",1,result.signum());\n}\n
public Point(Point p){\n  this(p.x,p.y);\n}\n
private long calcChecksum(String filename) throws Exception {\n  return calcChecksum(new File(filename));\n}\n
@Override public void skippedEntity(String name) throws SAXException {\n  if (saxLog.isDebugEnabled()) {\n    saxLog.debug(\"skippedEntity(\" + name + \")\");\n  }\n}\n
public boolean isPrimaryServer(String serverID){\n  return isSiteEnabled() ? getSiteID().equals(serverID) : localServerID.equals(serverID);\n}\n
protected boolean identityEquals(Identity identity){\n  if (!name.equalsIgnoreCase(identity.name))   return false;\n  if ((publicKey == null) ^ (identity.publicKey == null))   return false;\n  if (publicKey != null && identity.publicKey != null)   if (!publicKey.equals(identity.publicKey))   return false;\n  return true;\n}\n
public boolean isIgnoringCancelled(){\n  return ignoreCancelled;\n}\n
public MapboxDirections(Builder builder){\n  this.builder=builder;\n}\n
public static String printHexBinary(byte[] val){\n  if (theConverter == null)   initConverter();\n  return theConverter.printHexBinary(val);\n}\n
public String encode(){\n  return encode(new StringBuilder()).toString();\n}\n
public void handleButton3Request(RequestInvocationEvent event){\n  FSSAMLServiceViewBean vb=(FSSAMLServiceViewBean)getViewBean(FSSAMLServiceViewBean.class);\n  backTrail();\n  unlockPageTrailForSwapping();\n  passPgSessionMap(vb);\n  vb.setValues();\n  vb.forwardTo(getRequestContext());\n}\n
public FilterServiceImpl(Context context){\n  LOG.info(\"Creating AdguardService instance for {}\",context);\n  this.context=context;\n  filterListDao=new FilterListDaoImpl(context);\n  filterRuleDao=new FilterRuleDaoImpl(context);\n  preferencesService=ServiceLocator.getInstance(context).getPreferencesService();\n}\n
public KeyNotFoundException(Throwable ex){\n  super(ex);\n}\n
public String format(DateTimeFormatter formatter){\n  Objects.requireNonNull(formatter,\"formatter\");\n  return formatter.format(this);\n}\n
public UpgradeException(Throwable t){\n  super(t);\n}\n
public PlanarYUVLuminanceSource buildLuminanceSource(byte[] data,int width,int height){\n  Rect rect=getFramingRectInPreview();\n  if (rect == null) {\n    return null;\n  }\n  return new PlanarYUVLuminanceSource(data,width,height,rect.left,rect.top,rect.width(),rect.height(),false);\n}\n
public com.sun.identity.liberty.ws.common.jaxb.security.RequesterAuthorizationElement createRequesterAuthorizationElement() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.liberty.ws.common.jaxb.security.impl.RequesterAuthorizationElementImpl();\n}\n
public static URI resolve(final URI baseURI,final String reference){\n  return URIUtils.resolve(baseURI,URI.create(reference));\n}\n
public static void message(CommandManager mgr,String msg){\n  dumpToOutput(mgr,msg,null);\n  mgr.getDebugger().message(msg);\n}\n
private static Object maskNull(Object key){\n  return (key == null) ? NULL_KEY : key;\n}\n
public static boolean isValidLifecycleCallback(Method method){\n  if (method.getParameterTypes().length != 0 || Modifier.isStatic(method.getModifiers()) || method.getExceptionTypes().length > 0 || !method.getReturnType().getName().equals(\"void\")) {\n    return false;\n  }\n  return true;\n}\n
public int position(){\n  return pos;\n}\n
public DecisionImpl(String xml) throws XACMLException {\n  Document document=XMLUtils.toDOMDocument(xml,XACMLSDKUtils.debug);\n  if (document != null) {\n    Element rootElement=document.getDocumentElement();\n    processElement(rootElement);\n    makeImmutable();\n  }\n else {\n    XACMLSDKUtils.debug.error(\"DecisionImpl.processElement(): invalid XML input\");\n    throw new XACMLException(XACMLSDKUtils.xacmlResourceBundle.getString(\"errorObtainingElement\"));\n  }\n}\n
protected void ensureMyLastProtocolMessagesHaveRecords(List<ProtocolMessage> protocolMessages){\n  for (int pmPointer=0; pmPointer < protocolMessages.size(); pmPointer++) {\n    ProtocolMessage pm=protocolMessages.get(pmPointer);\n    if (handlingMyLastProtocolMessageWithContentType(protocolMessages,pmPointer)) {\n      if (pm.getRecords() == null || pm.getRecords().isEmpty()) {\n        pm.addRecord(new Record());\n      }\n    }\n  }\n}\n
public void startPrefixMapping(String prefix,String uri){\n}\n
private PrivilegeUtils(){\n}\n
public static Fragment1 newInstance(int sectionNumber){\n  Fragment1 fragment=new Fragment1();\n  Bundle args=new Bundle();\n  args.putInt(ARG_SECTION_NUMBER,sectionNumber);\n  fragment.setArguments(args);\n  return fragment;\n}\n
public static void fill(char[] array,int start,int end,char value){\n  Arrays.checkStartAndEnd(array.length,start,end);\n  for (int i=start; i < end; i++) {\n    array[i]=value;\n  }\n}\n
public void visitLineNumber(int line,Label start){\n  if (mv != null) {\n    mv.visitLineNumber(line,start);\n  }\n}\n
public CompositeContext createContext(ColorModel srcColorModel,ColorModel dstColorModel,RenderingHints hints){\n  return new SunCompositeContext(this,srcColorModel,dstColorModel);\n}\n
public boolean isBearer(){\n  if (_statements == null || _statements.isEmpty()) {\n    return false;\n  }\n  Iterator iter=_statements.iterator();\n  while (iter.hasNext()) {\n    Object statement=iter.next();\n    if (!(statement instanceof SubjectStatement)) {\n      continue;\n    }\n    Subject subject=((SubjectStatement)statement).getSubject();\n    if (subject == null) {\n      continue;\n    }\n    SubjectConfirmation sc=subject.getSubjectConfirmation();\n    if (sc == null) {\n      continue;\n    }\n    Set confirmationMethods=sc.getConfirmationMethod();\n    if (confirmationMethods == null || confirmationMethods.isEmpty()) {\n      continue;\n    }\n    if (confirmationMethods.contains(SAMLConstants.CONFIRMATION_METHOD_BEARER)) {\n      return true;\n    }\n  }\n  return false;\n}\n
public ExpectedImpl(T value){\n  this.value=Objects.requireNonNull(value);\n}\n
@Override protected void finalize(){\n  disconnect(DisconnectReason.OTHER,false,null);\n}\n
public HomesUserDatabase(){\n  super();\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  NodeList elementList;\n  Node testAddress;\n  NamedNodeMap attributes;\n  Node removedNode;\n  String value;\n  doc=(Document)load(\"staff\",true);\n  elementList=doc.getElementsByTagName(\"address\");\n  testAddress=elementList.item(2);\n  attributes=testAddress.getAttributes();\n  removedNode=attributes.removeNamedItem(\"street\");\n  value=removedNode.getNodeValue();\n  assertEquals(\"namednodemapRemoveNamedItemReturnNodeValueAssert\",\"No\",value);\n}\n
public StateAttribute(byte[] octets){\n  super(octets);\n  state=new String(octets,2,octets.length - 2,Charset.forName(\"utf-8\"));\n}\n
@BeforeClass public void startServer() throws Exception {\n  TestCaseUtils.startServer();\n}\n
public static void main(final String[] args){\n  DOMTestCase.doMain(characterdatareplacedatamiddle.class,args);\n}\n
public void stopReplicationServers(Collection<HostPort> serversToDisconnect){\n  for (  ReplicationServerHandler rsHandler : connectedRSs.values()) {\n    if (serversToDisconnect.contains(HostPort.valueOf(rsHandler.getServerAddressURL()))) {\n      stopServer(rsHandler,false);\n    }\n  }\n}\n
public void stopStreaming(){\nsynchronized (SyncOp) {\n    videoClient.stopStreaming();\n    audioClient.stop();\n    rtmpSender.stop();\n    LogTools.d(\"RESClient,stopStreaming()\");\n  }\n}\n
public static void main(final String[] args){\n  DOMTestCase.doMain(documentimportnode12.class,args);\n}\n
public void logException(Throwable ex){\n  if (needsLogging) {\n    this.getLogger().error(ex.getMessage(),ex);\n  }\n}\n
public void put(E e){\n  offer(e);\n}\n
@Override public boolean isPrintValue(Object bean,Object bean2,String attrName,StoreDescription desc){\n  boolean isPrint=super.isPrintValue(bean,bean2,attrName,desc);\n  if (isPrint) {\n    if (\"jkHome\".equals(attrName)) {\n      Connector connector=((Connector)bean);\n      File catalinaBase=getCatalinaBase();\n      File jkHomeBase=getJkHomeBase((String)connector.getProperty(\"jkHome\"),catalinaBase);\n      isPrint=!catalinaBase.equals(jkHomeBase);\n    }\n  }\n  return isPrint;\n}\n
private boolean isAllowedByIp(String ip) throws PolicyException {\n  boolean allowed=false;\n  long requestIp=stringToIp(ip);\n  Iterator ipValues=ipList.iterator();\n  while (ipValues.hasNext()) {\n    long startIp=((Long)ipValues.next()).longValue();\n    if (ipValues.hasNext()) {\n      long endIp=((Long)ipValues.next()).longValue();\n      if ((requestIp >= startIp) && (requestIp <= endIp)) {\n        allowed=true;\n        break;\n      }\n    }\n  }\n  if ((requestIp >= startIp) && (requestIp <= endIp)) {\n    allowed=true;\n  }\n  return allowed;\n}\n
private boolean contains(String[] names,String name){\n  assert name != null;\n  for (int i=0; i < names.length; i++) {\n    if (name.equals(names[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n
public void testCase1(){\n  byte aBytes[]={1,2,3,4,5,6,7};\n  byte bBytes[]={0};\n  int aSign=1;\n  int bSign=0;\n  BigInteger aNumber=new BigInteger(aSign,aBytes);\n  BigInteger bNumber=new BigInteger(bSign,bBytes);\n  try {\n    aNumber.divide(bNumber);\n    fail(\"ArithmeticException has not been caught\");\n  }\n catch (  ArithmeticException e) {\n  }\n}\n
public void unsetCompression(){\n  if (getCompressionMode() != MODE_EXPLICIT) {\n    throw new IllegalStateException(\"Compression mode not MODE_EXPLICIT!\");\n  }\n  this.compressionQuality=JPEG.DEFAULT_QUALITY;\n}\n
public GenericPrincipal(String name,String password,List<String> roles,Principal userPrincipal,LoginContext loginContext,GSSCredential gssCredential){\n  super();\n  this.name=name;\n  this.password=password;\n  this.userPrincipal=userPrincipal;\n  if (roles == null) {\n    this.roles=new String[0];\n  }\n else {\n    this.roles=roles.toArray(new String[roles.size()]);\n    if (this.roles.length > 1) {\n      Arrays.sort(this.roles);\n    }\n  }\n  this.loginContext=loginContext;\n  this.gssCredential=gssCredential;\n}\n
static void writeStringToFile(final String string,final File file) throws IOException {\n  createFile(file);\n  try (PrintWriter printWriter=new PrintWriter(file)){\n    printWriter.print(string);\n  }\n }\n
private void addDataAndRegisteredParamId(Long ruleActionId,Event event,HashMap<Long,String> paramsData,HashMap<Long,Long> paramsRegisteredParamId){\n  if (!database.isOpen()) {\n    throw new IllegalStateException(TAG + \" is already closed.\");\n  }\n  Long paramId;\n  String paramData;\n  Long paramRegisteredParamId;\n  Cursor cursor=ruleActionParameterDbAdapter.fetchAll(ruleActionId,null,null);\n  for (int i=0; i < cursor.getCount(); i++) {\n    cursor.moveToNext();\n    paramId=getLongFromCursor(cursor,RuleActionParameterDbAdapter.KEY_RULEACTIONPARAMETERID);\n    paramData=getStringFromCursor(cursor,RuleActionParameterDbAdapter.KEY_RULEACTIONPARAMETERDATA);\n    paramRegisteredParamId=getLongFromCursor(cursor,RuleActionParameterDbAdapter.KEY_ACTIONPARAMETERID);\n    paramsData.put(paramId,fillParamWithEventAttrib(paramData,event));\n    paramsRegisteredParamId.put(paramId,paramRegisteredParamId);\n  }\n  cursor.close();\n}\n
private void deleteSubtree(DN dn) throws LdapException {\n  for (  DN child : listEntries(dn,Filter.objectClassPresent())) {\n    deleteSubtree(child);\n  }\n  connection.delete(dn.toString());\n}\n
public void readByteArray(byte[] arr,int offset) throws InvalidDataTypeException {\n  if (arr == null) {\n    throw new NullPointerException(\"Byte array is null\");\n  }\n  if ((offset < 0) || (offset >= arr.length)) {\n    throw new InvalidDataTypeException(\"Offset to byte array is out of bounds: offset = \" + offset + \", array.length = \"+ arr.length);\n  }\n  if (offset + size > arr.length) {\n    throw new InvalidDataTypeException(\"Offset plus size to byte array is out of bounds: offset = \" + offset + \", size = \"+ size+ \" + arr.length \"+ arr.length);\n  }\n  long lvalue=0;\n  for (int i=offset; i < (offset + size); i++) {\n    lvalue<<=8;\n    lvalue+=(arr[i] & 0xff);\n  }\n  value=lvalue;\n  logger.config(\"Read NumberFixedlength:\" + value);\n}\n
private void removeMatchingRuleUse(String definition,SchemaBuilder newSchemaBuilder,Set<String> modifiedSchemaFiles) throws DirectoryException {\n  Schema currentSchema=newSchemaBuilder.toSchema();\n  String mruOid=SchemaUtils.parseMatchingRuleUseOID(definition);\n  if (!currentSchema.hasMatchingRuleUse(mruOid)) {\n    LocalizableMessage message=ERR_SCHEMA_MODIFY_REMOVE_NO_SUCH_MR_USE.get(mruOid);\n    throw new DirectoryException(ResultCode.UNWILLING_TO_PERFORM,message);\n  }\n  newSchemaBuilder.removeMatchingRuleUse(mruOid);\n  addElementIfNotNull(modifiedSchemaFiles,getElementSchemaFile(currentSchema.getMatchingRuleUse(mruOid)));\n}\n
public static String removeSlashFromEnd(String string){\n  if (string != null && !string.equals(\"\") && string.charAt(string.length() - 1) == \'/\') {\n    return string.substring(0,string.length() - 1);\n  }\n  return string;\n}\n
private void handlePrivilegeUpdates() throws SSOException, SMSException {\n  for (  ChangeSet<String,Set<String>> change : privilegeUpdates) {\n    final String configName=change.getIdentifier();\n    final Set<String> newPermissions=change.getData();\n    final ServiceConfig privilegeConfig=privilegesConfig.getSubConfig(configName);\n    privilegeConfig.addAttribute(LIST_OF_PERMISSIONS,newPermissions);\n  }\n}\n
public void testCase6(){\n  byte aBytes[]={1,2,3,4,5,6,7,1,2,3};\n  byte bBytes[]={10,20,30,40,50,60,70,10,20,30};\n  int aSign=-1;\n  int bSign=-1;\n  byte rBytes[]={9,18,27,36,45,54,63,9,18,27};\n  BigInteger aNumber=new BigInteger(aSign,aBytes);\n  BigInteger bNumber=new BigInteger(bSign,bBytes);\n  BigInteger result=aNumber.subtract(bNumber);\n  byte resBytes[]=new byte[rBytes.length];\n  resBytes=result.toByteArray();\n  for (int i=0; i < resBytes.length; i++) {\n    assertTrue(resBytes[i] == rBytes[i]);\n  }\n  assertEquals(1,result.signum());\n}\n
public void update(Graphics a,JComponent b){\n  for (int i=0; i < uis.size(); i++) {\n    ((ComponentUI)(uis.elementAt(i))).update(a,b);\n  }\n}\n
public synchronized void close() throws IOException {\n  isClosed=true;\n  localAddress=Inet4Address.ANY;\n  impl.close();\n}\n
@Override public void lifecycleEvent(LifecycleEvent event){\n  try {\n    host=(Host)event.getLifecycle();\n    if (host instanceof StandardHost) {\n      setCopyXML(((StandardHost)host).isCopyXML());\n      setDeployXML(((StandardHost)host).isDeployXML());\n      setUnpackWARs(((StandardHost)host).isUnpackWARs());\n      setContextClass(((StandardHost)host).getContextClass());\n    }\n  }\n catch (  ClassCastException e) {\n    log.error(sm.getString(\"hostConfig.cce\",event.getLifecycle()),e);\n    return;\n  }\n  if (event.getType().equals(Lifecycle.PERIODIC_EVENT)) {\n    check();\n  }\n else   if (event.getType().equals(Lifecycle.BEFORE_START_EVENT)) {\n    beforeStart();\n  }\n else   if (event.getType().equals(Lifecycle.START_EVENT)) {\n    start();\n  }\n else   if (event.getType().equals(Lifecycle.STOP_EVENT)) {\n    stop();\n  }\n}\n
public void removeTreeModelListener(TreeModelListener l){\n  listenerList.remove(TreeModelListener.class,l);\n}\n
public static int dehexchar(char hex){\n  if (hex >= \'0\' && hex <= \'9\') {\n    return hex - \'0\';\n  }\n else   if (hex >= \'A\' && hex <= \'F\') {\n    return hex - \'A\' + 10;\n  }\n else   if (hex >= \'a\' && hex <= \'f\') {\n    return hex - \'a\' + 10;\n  }\n else {\n    return -1;\n  }\n}\n
public SQLIntegrityConstraintViolationException(String reason,Throwable cause){\n  super(reason,cause);\n}\n
private void assertUniqueMod(List<Modification> mods,ModificationType modType,String value){\n  assertThat(mods).hasSize(1);\n  Modification mod=mods.get(0);\n  assertEquals(mod.getModificationType(),modType);\n  String firstVal=mod.getAttribute().iterator().next().toString();\n  assertEquals(firstVal,value);\n}\n
public int doRead(ByteChunk chunk) throws IOException {\n  int n=inputBuffer.doRead(chunk);\n  if (n > 0) {\n    bytesRead+=n;\n  }\n  return n;\n}\n
public static boolean isExpired(){\n  return getInstance().expired;\n}\n
ForkJoinWorkerThread(ForkJoinPool pool,ThreadGroup threadGroup,AccessControlContext acc){\n  super(threadGroup,null,\"aForkJoinWorkerThread\");\n  U.putOrderedObject(this,INHERITEDACCESSCONTROLCONTEXT,acc);\n  eraseThreadLocals();\n  this.pool=pool;\n  this.workQueue=pool.registerWorker(this);\n}\n
void attachView(){\n  getPresenter().attachView(delegateCallback.getMvpView());\n}\n
public static boolean matchSecret(String secret){\n  return secretSet.remove(secret);\n}\n
public static boolean skip_scope(JflexScanner p_scanner){\n  int open_bracked_count=1;\n  while (open_bracked_count > 0) {\n    p_scanner.yybegin(DsnFileScanner.NAME);\n    Object curr_token=null;\n    try {\n      curr_token=p_scanner.next_token();\n    }\n catch (    Exception e) {\n      System.err.println(\"ScopeKeyword.skip_scope: Error while scanning file\");\n      System.err.println(e);\n      return false;\n    }\n    if (curr_token == null) {\n      return false;\n    }\n    if (curr_token == DsnKeyword.OPEN_BRACKET) {\n      ++open_bracked_count;\n    }\n else     if (curr_token == DsnKeyword.CLOSED_BRACKET) {\n      --open_bracked_count;\n    }\n  }\n  return true;\n}\n
public GSSAPISASLMechanismHandler(){\n  super();\n}\n
private int normalizePort(int port,String host){\n  if ((1 <= port && port <= 65535) || (port == 0 && host == null)) {\n    return port;\n  }\n  throw new IllegalArgumentException(\"Invalid network port provided: \" + port + \" is not included in the [1, 65535] range.\");\n}\n
public ProgressMonitor(Component parentComponent,Object message,String note,int min,int max){\n  this(parentComponent,message,note,min,max,null);\n}\n
private Node addConditionWaiter(){\n  Node t=lastWaiter;\n  if (t != null && t.waitStatus != Node.CONDITION) {\n    unlinkCancelledWaiters();\n    t=lastWaiter;\n  }\n  Node node=new Node(Thread.currentThread(),Node.CONDITION);\n  if (t == null)   firstWaiter=node;\n else   t.nextWaiter=node;\n  lastWaiter=node;\n  return node;\n}\n
private Object writeReplace(){\n  return new Ser(Ser.ZOT,this);\n}\n
public static void print(Object... params){\n  String fullText=buildToString(params);\n  System.out.println(fullText);\n}\n
public static Component createHorizontalGlue(){\n  return new Filler(new Dimension(0,0),new Dimension(0,0),new Dimension(Short.MAX_VALUE,0));\n}\n
static void testFailLoadAndGc() throws TestFailed {\n  try {\n    BrokenDexLoader loader;\n    loader=new BrokenDexLoader(ClassLoader.getSystemClassLoader());\n    loader.findBrokenClass();\n    System.err.println(\"ERROR: Inaccessible was accessible\");\n  }\n catch (  InvocationTargetException ite) {\n    Throwable cause=ite.getCause();\n    if (cause instanceof NullPointerException) {\n      System.err.println(\"Got expected ITE/NPE\");\n    }\n else {\n      System.err.println(\"Got unexpected ITE\");\n      ite.printStackTrace();\n    }\n  }\n}\n
public JTabbedPane(int tabPlacement,int tabLayoutPolicy){\n  setTabPlacement(tabPlacement);\n  setTabLayoutPolicy(tabLayoutPolicy);\n  pages=new ArrayList<Page>(1);\n  setModel(new DefaultSingleSelectionModel());\n  updateUI();\n}\n
public void onCreate(Bundle savedInstanceState){\n  Session session=Session.getActiveSession();\n  if (session == null) {\n    if (savedInstanceState != null) {\n      session=Session.restoreSession(activity,null,callback,savedInstanceState);\n    }\n    if (session == null) {\n      session=new Session(activity);\n    }\n    Session.setActiveSession(session);\n  }\n  if (savedInstanceState != null) {\n    String callIdString=savedInstanceState.getString(DIALOG_CALL_ID_SAVE_KEY);\n    if (callIdString != null) {\n      pendingFacebookDialogCallId=UUID.fromString(callIdString);\n    }\n    pendingFacebookDialogCallStore.restoreFromSavedInstanceState(savedInstanceState);\n  }\n}\n
public static void main(final String[] args){\n  DOMTestCase.doMain(attreffectivevalue.class,args);\n}\n
public static ComponentUI createUI(JComponent c){\n  throw new Error(\"ComponentUI.createUI not implemented.\");\n}\n
public XMLElement newElementFromXMLFragment(String xmlFragment) throws Exception {\n  StringReader reader=new StringReader(xmlFragment);\n  ArrayList newTokens=getParser().parse(reader);\n  ArrayList filteredTokens=getFilteredTokens(newTokens);\n  ArrayList elements=getElements(filteredTokens);\n  if (elements == null || elements.size() != 1) {\n    throw new Exception(\"Failed to parse fragment into new element\");\n  }\n  return (XMLElement)elements.get(0);\n}\n
public static String dateToString(final Date date){\n  return dateToString(date,UTC_DATE_FORMAT,UTC_TIME_ZONE);\n}\n
public void removeQualifiers(){\n  PropertyOptions opts=getOptions();\n  opts.setHasQualifiers(false);\n  opts.setHasLanguage(false);\n  opts.setHasType(false);\n  qualifier=null;\n}\n
public final void addAttribute(String uri,String local,String qname,String type,String val){\n  int index=super.getLength();\n  super.addAttribute(uri,local,qname,type,val);\n  if (index < MAXMinus1) {\n    return;\n  }\n else   if (index == MAXMinus1) {\n    switchOverToHash(MAX);\n  }\n else {\n    Integer i=new Integer(index);\n    m_indexFromQName.put(qname,i);\n    m_buff.setLength(0);\n    m_buff.append(\'{\').append(uri).append(\'}\').append(local);\n    String key=m_buff.toString();\n    m_indexFromQName.put(key,i);\n  }\n  return;\n}\n
public void invokeAndWait(Runnable task){\n  if (roomLock.isHeldByCurrentThread()) {\n    if (cachedRunnables == null) {\n      cachedRunnables=new ArrayList<>();\n    }\n    cachedRunnables.add(task);\n  }\n else {\n    roomLock.lock();\n    try {\n      cachedRunnables=null;\n      if (!closed) {\n        task.run();\n      }\n      if (cachedRunnables != null) {\n        for (int i=0; i < cachedRunnables.size(); i++) {\n          if (!closed) {\n            cachedRunnables.get(i).run();\n          }\n        }\n        cachedRunnables=null;\n      }\n    }\n  finally {\n      roomLock.unlock();\n    }\n  }\n}\n
public JobService jobRangeByType(String type,String state,long from,long to,String order,Handler<AsyncResult<List<Job>>> handler){\n  delegate.jobRangeByType(type,state,from,to,order,handler);\n  return this;\n}\n
static void putFederation(String realm,String federationId,FederationElement federation){\n  String cacheKey=buildCacheKey(realm,federationId);\n  if (federation != null) {\n    if (debug.messageEnabled()) {\n      debug.message(\"WSFederationMetaCache.putFederation: \" + \"cacheKey = \" + cacheKey);\n    }\n    federationCache.put(cacheKey,federation);\n  }\n else {\n    if (debug.messageEnabled()) {\n      debug.message(\"WSFederationMetaCache.putFederation: delete cacheEey = \" + cacheKey);\n    }\n    federationCache.remove(cacheKey);\n    configCache.remove(cacheKey);\n  }\n}\n
@Override public String toString(){\n  String s=null;\n  try {\n    s=toJSONObject().toString(2);\n  }\n catch (  JSONException e) {\n    PrivilegeManager.debug.error(\"EntitlementSubjectImpl.toString\",e);\n  }\n  return s;\n}\n
private void hideBothNavigationBarAndStatusBar(){\n  View decorView=getWindow().getDecorView();\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n    int uiOptions=View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_FULLSCREEN;\n    decorView.setSystemUiVisibility(uiOptions);\n  }\n}\n
public boolean ready() throws IOException {\nsynchronized (lock) {\n    ensureOpen();\n    return true;\n  }\n}\n
private List<View> addView(View view,List<View> cache){\n  if (cache == null) {\n    cache=new LinkedList<View>();\n  }\n  cache.add(view);\n  return cache;\n}\n
public void assign(org.omg.DynamicAny.DynAny dyn_any) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch {\n  org.omg.CORBA.portable.ServantObject $so=_servant_preinvoke(\"assign\",_opsClass);\n  DynFixedOperations $self=(DynFixedOperations)$so.servant;\n  try {\n    $self.assign(dyn_any);\n  }\n  finally {\n    _servant_postinvoke($so);\n  }\n}\n
@Override public void objectChanged(String dn,int type){\n  Matcher matcher=schemaDnPattern.matcher(dn);\n  if (!matcher.matches()) {\n    return;\n  }\n  refreshServiceRoute(type,matcher.group(2),matcher.group(1));\n}\n
private static Response createResponse(Response samlResponse,List assertions) throws SAML2Exception {\n  Response response=new ResponseImpl();\n  response.setVersion(samlResponse.getVersion());\n  response.setIssueInstant(samlResponse.getIssueInstant());\n  response.setID(samlResponse.getID());\n  response.setInResponseTo(samlResponse.getInResponseTo());\n  response.setIssuer(samlResponse.getIssuer());\n  response.setDestination(samlResponse.getDestination());\n  response.setExtensions(samlResponse.getExtensions());\n  response.setConsent(samlResponse.getConsent());\n  response.setStatus(samlResponse.getStatus());\n  response.setAssertion(assertions);\n  return response;\n}\n
public boolean hasPlayerCount(){\n  return fieldSetFlags()[0];\n}\n
private static String makeQualifiedMethodName(String name,String[] params){\n  StringBuffer sb=new StringBuffer(name);\n  sb.append(\'=\');\n  for (int i=0; i < params.length; i++) {\n    sb.append(\':\');\n    sb.append(params[i]);\n  }\n  return sb.toString();\n}\n
int readUtah(int row,int column,int numRows,int numColumns){\n  int currentByte=0;\n  if (readModule(row - 2,column - 2,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  currentByte<<=1;\n  if (readModule(row - 2,column - 1,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  currentByte<<=1;\n  if (readModule(row - 1,column - 2,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  currentByte<<=1;\n  if (readModule(row - 1,column - 1,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  currentByte<<=1;\n  if (readModule(row - 1,column,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  currentByte<<=1;\n  if (readModule(row,column - 2,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  currentByte<<=1;\n  if (readModule(row,column - 1,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  currentByte<<=1;\n  if (readModule(row,column,numRows,numColumns)) {\n    currentByte|=1;\n  }\n  return currentByte;\n}\n
public int nextIntUTF8() throws DataFormatException {\n  return Integer.valueOf(nextString());\n}\n
public Set<String> searchSubOrgNames(SSOToken token,String dn,String filter,int numOfEntries,boolean sortResults,boolean ascendingOrder,boolean recursive) throws SMSException, SSOException {\n  if (debug.messageEnabled()) {\n    debug.message(\"SMSLdapObject.searchSubOrgNames search: \" + dn);\n  }\n  String[] objs={filter};\n  String FILTER_PATTERN_ORG=\"(&(objectclass=\" + SMSEntry.OC_REALM_SERVICE + \")(\"+ SMSEntry.ORGANIZATION_RDN+ \"={0}))\";\n  String sfilter=MessageFormat.format(FILTER_PATTERN_ORG,(Object[])objs);\n  return searchSubOrganizationNames(token,dn,sfilter,numOfEntries,sortResults,ascendingOrder,recursive);\n}\n
private static void checkEntryAttributeValue(Entry entry,String attributeName,String attributeValue){\n  Iterable<Attribute> attrs=entry.getAllAttributes(attributeName);\n  assertThat(attrs).as(\"Was expecting attribute \" + attributeName + \"=\"+ attributeValue).hasSize(1);\n  Attribute attr=attrs.iterator().next();\n  Iterator<ByteString> attrValues=attr.iterator();\n  assertTrue(attrValues.hasNext());\n  ByteString attrValue=attrValues.next();\n  assertFalse(attrValues.hasNext());\n  assertEquals(attrValue.toString(),attributeValue,\"Was expecting attribute \" + attributeName + \"=\"+ attributeValue+ \" but got value: \"+ attrValue);\n}\n
public void notifyDataSetChanged(){\n  mDataSetObservable.notifyChanged();\n}\n
static int applyMaskPenaltyRule4(ByteMatrix matrix){\n  int numDarkCells=0;\n  byte[][] array=matrix.getArray();\n  int width=matrix.getWidth();\n  int height=matrix.getHeight();\n  for (int y=0; y < height; y++) {\n    byte[] arrayY=array[y];\n    for (int x=0; x < width; x++) {\n      if (arrayY[x] == 1) {\n        numDarkCells++;\n      }\n    }\n  }\n  int numTotalCells=matrix.getHeight() * matrix.getWidth();\n  int fivePercentVariances=Math.abs(numDarkCells * 2 - numTotalCells) * 10 / numTotalCells;\n  return fivePercentVariances * N4;\n}\n
public DelegatingStatement(final DelegatingConnection<?> c,final Statement s){\n  super(c);\n  _stmt=s;\n  _conn=c;\n}\n
private static int base64toInt(char c,byte[] alphaToInt){\n  int result=alphaToInt[c];\n  if (result < 0)   throw new IllegalArgumentException(\"Illegal character \" + c);\n  return result;\n}\n
private static int[] intArrayFromCollection(Collection<Integer> v){\n  int[] result=new int[v.size()];\n  int i=0;\n  for (  Integer value : v) {\n    result[i]=value;\n    i++;\n  }\n  return result;\n}\n
private void rendering(byte[] pixel){\nsynchronized (syncPreview) {\n    if (previewRender == null) {\n      return;\n    }\n    previewRender.rendering(pixel);\n  }\n}\n
SessionTracker(Context context,Session.StatusCallback callback,Session session){\n  this(context,callback,session,true);\n}\n
public final void forceFinished(boolean finished){\n  mFinished=finished;\n}\n
@Override public void removeAttribute(String name){\n  myAttributes.remove(name);\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  NodeList elementList;\n  Element testAddr;\n  Attr addrAttr;\n  String attrValue;\n  doc=(Document)load(\"staff\",false);\n  elementList=doc.getElementsByTagName(\"address\");\n  testAddr=(Element)elementList.item(0);\n  addrAttr=testAddr.getAttributeNode(\"domestic\");\n  attrValue=addrAttr.getNodeValue();\n  assertEquals(\"nodeAttributeNodeValueAssert1\",\"Yes\",attrValue);\n}\n
public void paintRootPaneBackground(SynthContext context,Graphics g,int x,int y,int w,int h){\n  paintBackground(context,g,x,y,w,h,null);\n}\n
public TransactionUnavailableException(String message,Throwable cause){\n  super(message,cause);\n}\n
private boolean hasPort(List<ServicePort> ports,ServicePort port){\n  for (  ServicePort aPort : ports) {\n    if (Objects.equals(port.getPort(),aPort.getPort())) {\n      return true;\n    }\n  }\n  return false;\n}\n
public String toStringNoRevision(){\n  return Utils.joinAsString(\".\",major,minor,point);\n}\n
@SuppressWarnings({\"JavaDoc\"}) private TagField createGenreField(String content){\n  if (content == null) {\n    throw new IllegalArgumentException(ErrorMessage.GENERAL_INVALID_NULL_ARGUMENT.getMsg());\n  }\n  if (TagOptionSingleton.getInstance().isWriteMp4GenresAsText()) {\n    return new Mp4TagTextField(GENRE_CUSTOM.getFieldName(),content);\n  }\n  if (Mp4GenreField.isValidGenre(content)) {\n    return new Mp4GenreField(content);\n  }\n else {\n    return new Mp4TagTextField(GENRE_CUSTOM.getFieldName(),content);\n  }\n}\n
private int findLine(int offset){\n  int[] lineEnds=lineCache.get();\n  if (offset < lineEnds[0]) {\n    return 0;\n  }\n else   if (offset > lineEnds[lineCount - 1]) {\n    return lineCount;\n  }\n else {\n    return findLine(lineEnds,offset,0,lineCount - 1);\n  }\n}\n
public PluginResult.PostResponse invokePostResponseSearchPlugins(PostResponseSearchOperation searchOperation){\n  PluginResult.PostResponse result=null;\n  for (  DirectoryServerPlugin p : postResponseSearchPlugins) {\n    if (isInternalOperation(searchOperation,p)) {\n      continue;\n    }\n    try {\n      result=p.doPostResponse(searchOperation);\n    }\n catch (    Exception e) {\n      logException(searchOperation,p,e,ERR_PLUGIN_POST_RESPONSE_PLUGIN_EXCEPTION);\n    }\n    if (result == null) {\n      logNullResult(searchOperation,p,ERR_PLUGIN_POST_RESPONSE_PLUGIN_RETURNED_NULL);\n    }\n else     if (!result.continuePluginProcessing()) {\n      return result;\n    }\n  }\n  if (result == null) {\n    result=PluginResult.PostResponse.continueOperationProcessing();\n  }\n  return result;\n}\n
public FrameBodyTSST(ByteBuffer byteBuffer,int frameSize) throws InvalidTagException {\n  super(byteBuffer,frameSize);\n}\n
public com.sun.identity.wsfederation.jaxb.wsse.SecurityElement createSecurityElement() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.wsfederation.jaxb.wsse.impl.SecurityElementImpl();\n}\n
public void testAddMathContextEqualScalePosPos(){\n  String a=\"1231212478987482988429808779810457634781384756794987\";\n  int aScale=10;\n  String b=\"747233429293018787918347987234564568\";\n  int bScale=10;\n  String c=\"1.2313E+41\";\n  int cScale=-37;\n  BigDecimal aNumber=new BigDecimal(new BigInteger(a),aScale);\n  BigDecimal bNumber=new BigDecimal(new BigInteger(b),bScale);\n  MathContext mc=new MathContext(5,RoundingMode.UP);\n  BigDecimal result=aNumber.add(bNumber,mc);\n  assertEquals(\"incorrect value\",c,result.toString());\n  assertEquals(\"incorrect scale\",cScale,result.scale());\n}\n
public void createHTMLReports() throws ParserConfigurationException, SAXException, IOException {\n  Set<File> directories=getDirectories();\n  for (  File f : directories) {\n    Suite suite=new Suite(f);\n    if (suite.passed()) {\n      suitesPassed.add(suite);\n    }\n else {\n      suitesFailed.add(suite);\n    }\n  }\n  genMainPage();\n}\n
public boolean add(E e){\n  return offer(e);\n}\n
private Set unionIPRange(byte[] ipWithSubmask1,byte[] ipWithSubmask2){\n  Set set=new HashSet();\n  if (Arrays.areEqual(ipWithSubmask1,ipWithSubmask2)) {\n    set.add(ipWithSubmask1);\n  }\n else {\n    set.add(ipWithSubmask1);\n    set.add(ipWithSubmask2);\n  }\n  return set;\n}\n
public PlaPoint corner_first(){\n  PlaPoint a_point=corner(0);\n  return a_point;\n}\n
public int read(ByteBuffer buf,NioChannel socket,Selector selector,long readTimeout) throws IOException {\n  return read(buf,socket,selector,readTimeout,true);\n}\n
public static String toString(final List<?> list){\n  final StringBuffer buf=new StringBuffer(\"[\");\n  int i=0;\n  for (  final Object object : list) {\n    if (i++ > 0) {\n      buf.append(\",\");\n    }\n    buf.append(object == null ? \"null\" : JKObjectUtil.toString(object,true));\n  }\n  buf.append(\"]\");\n  return buf.toString();\n}\n
private static void mkdir(String dir) throws IOException {\n  FileUtils.createDirectory(dir);\n}\n
@Override public int doEndTag() throws JspException {\n  throw new UnsupportedOperationException(\"Illegal to invoke doEndTag() on TagAdapter wrapper\");\n}\n
private Socket createSSLOrBasicSocket(Socket startTLSSocket,SSLConnectionFactory sslConnectionFactory) throws SSLConnectionException, LDAPConnectionException {\n  if (sslConnectionFactory == null) {\n    return createSocket();\n  }\n else   if (!connectionOptions.useStartTLS()) {\n    return createSSLSocket(sslConnectionFactory);\n  }\n else {\n    try {\n      return sslConnectionFactory.createSocket(startTLSSocket,hostName,portNumber,true);\n    }\n catch (    IOException e) {\n      LocalizableMessage msg=INFO_RESULT_CLIENT_SIDE_CONNECT_ERROR.get();\n      throw new LDAPConnectionException(msg,CLIENT_SIDE_CONNECT_ERROR,null,e);\n    }\n  }\n}\n
public boolean equals(Object schemaAttrType){\n  if (schemaAttrType instanceof Type) {\n    Type s=(Type)schemaAttrType;\n    return (s.attrType.equals(attrType));\n  }\n  return (false);\n}\n
@SuppressWarnings(\"unchecked\") public Object clone(){\n  try {\n    HashSet<E> newSet=(HashSet<E>)super.clone();\n    newSet.map=(HashMap<E,Object>)map.clone();\n    return newSet;\n  }\n catch (  CloneNotSupportedException e) {\n    throw new InternalError(e);\n  }\n}\n
public int doStartTag() throws JspException {\n  reset();\n  ViewBean vb=getParentViewBean();\n  java.util.Locale locale;\n  if (vb instanceof AuthViewBeanBase) {\n    AuthViewBeanBase ab=(AuthViewBeanBase)vb;\n    locale=ab.getRequestLocale();\n  }\n else {\n    locale=java.util.Locale.getDefault();\n  }\n  String rbName=(String)getValue(\"BundleName\");\n  String resKey=(String)getValue(\"ResourceKey\");\n  String resValue;\n  ResourceBundle rb=AMResourceBundleCache.getInstance().getResBundle(rbName,locale);\n  try {\n    resValue=rb.getString(resKey);\n  }\n catch (  MissingResourceException ex) {\n    resValue=resKey;\n  }\n  writeOutput(resValue);\n  return SKIP_BODY;\n}\n
public String addListener(ServiceListener listener){\n  try {\n    validateSCM();\n    return (scm.addListener(token,listener));\n  }\n catch (  Exception e) {\n    SMSEntry.debug.error(\"ServiceConfigManager:addListener exception\" + \" Service Name: \" + serviceName,e);\n  }\n  return (null);\n}\n
private static <T>void legacyMergeSort(T[] a,Comparator<? super T> c){\n  T[] aux=a.clone();\n  if (c == null)   mergeSort(aux,a,0,a.length,0);\n else   mergeSort(aux,a,0,a.length,0,c);\n}\n
protected void installComponents(){\n  if (scrollableTabLayoutEnabled()) {\n    if (tabScroller == null) {\n      tabScroller=new ScrollableTabSupport(tabPane.getTabPlacement());\n      tabPane.add(tabScroller.viewport);\n    }\n  }\n  installTabContainer();\n}\n
public EncryptedAssertion createEncryptedAssertion(Element elem) throws SAML2Exception {\n  Object obj=SAML2SDKUtils.getObjectInstance(SAML2SDKUtils.ENCRYPTED_ASSERTION,elem);\n  if (obj == null) {\n    return new EncryptedAssertionImpl(elem);\n  }\n else {\n    return (EncryptedAssertion)obj;\n  }\n}\n
public Segment(){\n  this(null,0,0);\n}\n
private static void checkUpdate() throws Exception {\n  Cache cache=Cache.getCache(getApplicationName(),CacheType.Persistent);\n  Document dom=cache.xml(\"update.url\",null).expire(Cache.ONE_WEEK).retry(0).get();\n  final Map<String,String> update=streamElements(dom.getFirstChild()).collect(toMap(null,null));\n  int latestRev=Integer.parseInt(update.get(\"revision\"));\n  int currentRev=getApplicationRevisionNumber();\n  if (latestRev > currentRev && currentRev > 0) {\n    SwingUtilities.invokeLater(null);\n  }\n}\n
public static Vector send(URL url,RequestSet set) throws SendRequestException {\n  return send(url,null,set,null);\n}\n
public void removeCertificate(String alias) throws KeyStoreException, IllegalArgumentException {\n  ensureValid(alias,CERT_ALIAS_MSG);\n  if (!aliasInUse(alias)) {\n    LocalizableMessage msg=ERR_CERTMGR_ALIAS_CAN_NOT_DELETE.get(alias);\n    throw new IllegalArgumentException(msg.toString());\n  }\n  keyStore=null;\n  Platform.deleteAlias(getKeyStore(),keyStorePath,alias,password);\n}\n
@Override public Promise<Void,AuthenticationException> cleanSubject(MessageInfoContext messageInfo,Subject subject){\n  return newResultPromise(null);\n}\n
public void addMember(PersistentObject member) throws UMSException {\n  DN userDN=DN.valueOf(member.getGuid().getDn());\n  LDAPUrl memberUrl=getUrl();\n  DN memberDN=memberUrl.getName();\n  if (!userDN.isInScopeOf(memberDN,SearchScope.WHOLE_SUBTREE)) {\n    String args[]=new String[2];\n    args[0]=userDN.toString();\n    args[1]=memberUrl.toString();\n    throw new UMSException(i18n.getString(IUMSConstants.USER_NOT_IN_GROUP_SCOPE,args));\n  }\n else   if ((userDN.size() - memberDN.size()) > 1 && SearchScope.SINGLE_LEVEL.equals(memberUrl.getScope())) {\n    String args[]=new String[2];\n    args[0]=userDN.toString();\n    args[1]=memberUrl.toString();\n    throw new UMSException(i18n.getString(IUMSConstants.USER_NOT_IN_GROUP_SCOPE,args));\n  }\n  member.modify(new Attr(MEMBER_ATTR_NAME,this.getDN()),ModificationType.ADD);\n  member.save();\n}\n
public boolean equals(XObject obj2){\n  return obj2.getType() == CLASS_NULL;\n}\n
private void writeDataUptoIncludingIlst(FileChannel fileReadChannel,FileChannel fileWriteChannel,int oldIlstSize,int startIlstWithinFile,ByteBuffer rawIlstData) throws IOException {\n  fileReadChannel.position(0);\n  fileWriteChannel.transferFrom(fileReadChannel,0,startIlstWithinFile);\n  fileWriteChannel.position(startIlstWithinFile);\n  fileWriteChannel.write(rawIlstData);\n  fileReadChannel.position(startIlstWithinFile + oldIlstSize);\n}\n
static void checkOpcode(final int opcode,final int type){\n  if (opcode < 0 || opcode > 199 || TYPE[opcode] != type) {\n    throw new IllegalArgumentException(\"Invalid opcode: \" + opcode);\n  }\n}\n
public static void writeHeader(PrintWriter writer,Object[] args,int mode){\n  if (mode == 0) {\n    writer.print(Constants.HTML_HEADER_SECTION);\n  }\n else   if (mode == 1) {\n    writer.write(Constants.XML_DECLARATION);\n    writer.print(MessageFormat.format(Constants.XML_STYLE,args));\n    writer.write(\"<status>\");\n  }\n}\n
OperationMonitor(final RateTimer timer,final RateWindow rateWindow){\n  this.timerGetter=timer;\n  this.rateWindow=rateWindow;\n}\n
static ClassLoader findClassLoader() throws ConfigurationError {\n  return Thread.currentThread().getContextClassLoader();\n}\n
@Override public void onDrawFrame(GL10 gl10){\n  GLES20.glClearColor(1.0f,0.0f,0.0f,1.0f);\n  GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT | GLES20.GL_DEPTH_BUFFER_BIT);\n  GLES20.glEnable(GLES20.GL_DEPTH_TEST);\n  GLES20.glEnable(GLES20.GL_CULL_FACE);\n  long currentTimeMillis=System.currentTimeMillis();\n  updateWithDelta(currentTimeMillis - lastTimeMillis);\n  lastTimeMillis=currentTimeMillis;\n}\n
public Goomba genGoomba(float[] coords,int stageZone,boolean checkBlocks){\n  return new Goomba(stageContainer,gameLoop,player,stageZone,checkBlocks,new String[]{null,\"M \" + ASPECT_LENGTH + \",0 L \"+ ASPECT_LENGTH+ \",\"+ (ASPECT_LENGTH - 6),\"M 0,\" + ASPECT_LENGTH + \" L \"+ ASPECT_LENGTH+ \",\"+ ASPECT_LENGTH,\"M 0,0 L 0,\" + (ASPECT_LENGTH - 6),\"M 20,\" + (ASPECT_LENGTH - 1) + \" L \"+ (ASPECT_LENGTH - 20)+ \",\"+ (ASPECT_LENGTH - 1),\"M 0,0 L 0,0 \" + ASPECT_LENGTH + \",0 \"+ ASPECT_LENGTH+ \",\"+ ASPECT_LENGTH+ \" 0,\"+ ASPECT_LENGTH+ \" Z\"},coords[0],coords[1] - ASPECT_LENGTH,0.4f * REL_HEIGHT,4.9f * REL_HEIGHT,playerDeathSprites,goomba0,goomba1,goomba2,goomba3);\n}\n
public static Foo fetchByUuid_First(java.lang.String uuid,OrderByComparator<Foo> orderByComparator){\n  return getPersistence().fetchByUuid_First(uuid,orderByComparator);\n}\n
public MembershipException(LocalizableMessage errorMessage,boolean continueIterating,Throwable cause){\n  super(errorMessage,cause);\n  this.continueIterating=continueIterating;\n}\n
@Override public com.liferay.blade.samples.servicebuilder.model.Foo deleteFoo(long fooId) throws com.liferay.portal.kernel.exception.PortalException {\n  return _fooLocalService.deleteFoo(fooId);\n}\n
public <V>V post(final String uri,final Object params,final Type type) throws IOException {\n  HttpURLConnection request=createPost(uri);\n  return sendJson(request,params,type);\n}\n
private static boolean isNameChar(char ch){\n  return (ch <= 0xFF && xmlNameChars[ch]) || isNameStartChar(ch) || (ch >= 0x300 && ch <= 0x36F)|| (ch >= 0x203F && ch <= 0x2040);\n}\n
void onDragEnter(){\n  mDragging=true;\n}\n
public ServerFaultException(final String messageCode){\n  super(null,messageCode,null);\n}\n
public FSArtifactStats(Map table,String realm,String providerId){\n  this.table=table;\n  this.providerId=providerId;\n  this.realm=realm;\n}\n
public static boolean isTargetApplicable(Aci aci,AciTargets targets,DN entryDN){\n  DN targetDN=aci.getDN();\n  Target target=targets.getTarget();\n  if (target != null && !target.isPattern() && target.getOperator() != NOT_EQUALITY) {\n    targetDN=target.getDN();\n  }\n  if (!isInScopeOf(entryDN,targetDN,targets.getTargetScope())) {\n    return false;\n  }\n  if (target != null) {\n    if (!target.isPattern() && target.getOperator() == NOT_EQUALITY && entryDN.isSubordinateOrEqualTo(target.getDN())) {\n      return false;\n    }\n    if (target.isPattern()) {\n      final boolean ret=target.matchesPattern(entryDN);\n      if (target.getOperator() == NOT_EQUALITY) {\n        return !ret;\n      }\n      return ret;\n    }\n  }\n  return true;\n}\n
protected synchronized void bcsPreDeserializationHook(ObjectInputStream ois) throws IOException, ClassNotFoundException {\n  serializable=ois.readInt();\n  int count=serializable;\n  while (count > 0) {\n    services.put(ois.readObject(),ois.readObject());\n    count--;\n  }\n}\n
public static Class<?> loadClass(String className) throws ClassNotFoundException {\n  MBEANSERVER_LOGGER.logp(Level.FINEST,DefaultLoaderRepository.class.getName(),\"loadClass\",className);\n  return load(null,className);\n}\n
public com.sun.identity.saml2.jaxb.assertion.AuthnStatementType createAuthnStatementType() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.saml2.jaxb.assertion.impl.AuthnStatementTypeImpl();\n}\n
public Class<?> loadTagFilePrototype() throws JasperException {\n  ctxt.setPrototypeMode(true);\n  try {\n    return loadTagFile();\n  }\n  finally {\n    ctxt.setPrototypeMode(false);\n  }\n}\n
public DefaultComboBoxModel(Vector<E> v){\n  objects=v;\n  if (getSize() > 0) {\n    selectedObject=getElementAt(0);\n  }\n}\n
public AffineTransform(double m00,double m10,double m01,double m11,double m02,double m12){\n  this.m00=m00;\n  this.m10=m10;\n  this.m01=m01;\n  this.m11=m11;\n  this.m02=m02;\n  this.m12=m12;\n  updateState();\n}\n
public void removeTrigger(String triggerId){\n  if (triggers.contains(triggerId)) {\n    triggers.remove(triggerId);\n  }\n}\n
public Map<String,Object> convertDataToObjects(Map<String,String> data){\n  Map<String,Object> results=new HashMap<>();\n  if (data != null) {\n    for (    String key : data.keySet()) {\n      results.put(key,data.get(key));\n    }\n  }\n  return results;\n}\n
private void updateProjectLookup(Project project){\n  if (project == null) {\n    throw new IllegalArgumentException(\"project cannot be null.\");\n  }\n  Template<Project> template=new Template<>(Project.class,null,project);\n  if (projectLookup != null && projectLookup.lookupItem(template) == null) {\n    clearProjectLookup();\n    content.add(project);\n    logger.fine(String.format(\"updateProjectLookup: added [%s] to the proxy lookup.\",ProjectUtils.getInformation(lastProject).getDisplayName()));\n  }\n}\n
public CertificateVerify(byte[] hash){\n  if (hash == null || hash.length == 0) {\n    fatalAlert(AlertProtocol.INTERNAL_ERROR,\"INTERNAL ERROR: incorrect certificate verify hash\");\n  }\n  this.signedHash=hash;\n  length=hash.length + 2;\n}\n
protected void maximizeFrame(JInternalFrame f){\n  BasicLookAndFeel.playSound(frame,\"InternalFrame.maximizeSound\");\n  getDesktopManager().maximizeFrame(f);\n}\n
public ListeningPoint createListeningPoint(int port,String transport) throws TransportNotSupportedException, InvalidArgumentException {\n  if (super.stackAddress == null)   throw new NullPointerException(\"Stack does not have a default IP Address!\");\n  return this.createListeningPoint(super.stackAddress,port,transport);\n}\n
public boolean markSupported(){\n  return true;\n}\n
public boolean isPreExternalInitializationSubcommand(){\n  return isSubcommand(PRE_EXTERNAL_INITIALIZATION_SUBCMD_NAME);\n}\n
public void archive(String fileName,String location){\n  if ((fileName == null) || (fileName.length() == 0)) {\n    Debug.error(\"Archiver:archive:FileName is null\");\n    return;\n  }\n else   if ((location == null) || (location.length() == 0)) {\n    Debug.error(\"Archiver:archive:Location is null\");\n    return;\n  }\n  Logger logger=(com.sun.identity.log.Logger)Logger.getLogger(fileName);\n  filesPerKeystoreCounter++;\n  Date d=newDate();\n  String timestampedFileName=location + PREFIX + fileName+ \".\"+ sdf.format(d).toString();\n  String completePath=location + PREFIX + fileName;\n  File f=new File(completePath);\n  f.renameTo(new File(timestampedFileName));\n  SecureFileHandler.addToCurrentFileList(fileName,fileName + \".\" + sdf.format(d).toString(),fileName);\n  return;\n}\n
boolean notificationEnabled(){\n  return notificationEnabledFlag;\n}\n
public void write(int b,long pos) throws IOException {\n  if (pos < 0) {\n    throw new ArrayIndexOutOfBoundsException(\"pos < 0\");\n  }\n  if (pos >= length) {\n    pad(pos);\n    length=pos + 1;\n  }\n  byte[] buf=getCacheBlock(pos / BUFFER_LENGTH);\n  int offset=(int)(pos % BUFFER_LENGTH);\n  buf[offset]=(byte)b;\n}\n
@Override public boolean accept(File file){\n  return !filter.accept(file);\n}\n
@Override public String generateTokenId(String existingId){\n  if (existingId != null) {\n    return existingId;\n  }\n  return UUID.randomUUID().toString();\n}\n
@Override public int write(ByteBuffer src) throws IOException {\n  checkInterruptStatus();\n  return sc.write(src);\n}\n
public synchronized void removeDropTargetListener(DropTargetListener dtl){\n  if (dtl != null && dtListener != null) {\n    if (dtListener.equals(dtl))     dtListener=null;\n else     throw new IllegalArgumentException(\"listener mismatch\");\n  }\n}\n
public static List<MappedMember> findMethodParent(MappedClass owner,String name,String desc,boolean originalNames){\n  List<MappedMember> list=new ArrayList<MappedMember>();\n  for (  MappedClass interfaceClass : owner.getInterfaces()) {\n    MappedMember mm=findMethodInParentInclusive(interfaceClass,name,desc,originalNames);\n    if (mm != null) {\n      list.add(mm);\n    }\n  }\n  if (owner.getParent() != null) {\n    MappedMember mm=findMethodInParentInclusive(owner.getParent(),name,desc,originalNames);\n    if (mm != null) {\n      list.add(mm);\n    }\n  }\n  return list;\n}\n
protected void sendDataIfMyLastMessage(List<ProtocolMessage> protocolMessages) throws IOException {\n  ProtocolMessage pm=protocolMessages.get(workflowContext.getProtocolMessagePointer());\n  if (handlingMyLastProtocolMessage(protocolMessages,workflowContext.getProtocolMessagePointer()) && messageBytesCollector.getRecordBytes().length != 0) {\n    LOGGER.debug(\"Records going to be sent: {}\",ArrayConverter.bytesToHexString(messageBytesCollector.getRecordBytes()));\n    if (pm.getRecords().get(0).isMeasuringTiming()) {\n      transportHandler.measureTiming(true);\n    }\n    transportHandler.sendData(messageBytesCollector.getRecordBytes());\n    messageBytesCollector.flushRecordBytes();\n  }\n}\n
boolean hasMask(int mask){\n  return (this.mask & mask) != 0;\n}\n
private JsonValue doSourceSync(Context context,String resourceId,JsonValue value) throws SynchronizationException {\n  return doSourceSync(context,resourceId,value,false,null);\n}\n
public boolean offer(E e){\n  if (e == null)   throw new NullPointerException();\n  modCount++;\n  int i=size;\n  if (i >= queue.length)   grow(i + 1);\n  size=i + 1;\n  if (i == 0)   queue[0]=e;\n else   siftUp(i,e);\n  return true;\n}\n
public AndFileFilter(IOFileFilter filter1,IOFileFilter filter2){\n  if (filter1 == null || filter2 == null) {\n    throw new IllegalArgumentException(\"The filters must not be null\");\n  }\n  this.fileFilters=new ArrayList<IOFileFilter>(2);\n  addFileFilter(filter1);\n  addFileFilter(filter2);\n}\n
public void clear(){\nsynchronized (lock) {\n    map.clear();\n    bytesCount=0;\n  }\n}\n
public SSOTokenProvider(){\n}\n
public void testDivideAndRemainderMathContextUP(){\n  String a=\"3736186567876876578956958765675671119238118911893939591735\";\n  int aScale=45;\n  String b=\"134432345432345748766876876723342238476237823787879183470\";\n  int bScale=70;\n  int precision=75;\n  RoundingMode rm=RoundingMode.UP;\n  MathContext mc=new MathContext(precision,rm);\n  String res=\"277923185514690367474770683\";\n  int resScale=0;\n  String rem=\"1.3032693871288309587558885943391070087960319452465789990E-15\";\n  int remScale=70;\n  BigDecimal aNumber=new BigDecimal(new BigInteger(a),aScale);\n  BigDecimal bNumber=new BigDecimal(new BigInteger(b),bScale);\n  BigDecimal result[]=aNumber.divideAndRemainder(bNumber,mc);\n  assertEquals(\"incorrect quotient value\",res,result[0].toString());\n  assertEquals(\"incorrect quotient scale\",resScale,result[0].scale());\n  assertEquals(\"incorrect remainder value\",rem,result[1].toString());\n  assertEquals(\"incorrect remainder scale\",remScale,result[1].scale());\n}\n
public void close() throws IOException {\n  super.close();\n  buf=null;\n}\n
public OpenDJLoggerFactory(){\n  loggerMap=new ConcurrentHashMap<>();\n}\n
public static int parseVersion(String revision) throws ConflictException {\n  int ver=-1;\n  try {\n    ver=Integer.parseInt(revision);\n  }\n catch (  NumberFormatException ex) {\n    throw new ConflictException(\"OrientDB repository expects revisions as int, \" + \"unable to parse passed revision: \" + revision);\n  }\n  return ver;\n}\n
private void writeLog(Map<DN,DN> modDNmap){\nsynchronized (logFile) {\n    try (BufferedWriter writer=setupWriter()){\n      for (      Map.Entry<DN,DN> mapEntry : modDNmap.entrySet()) {\n        writer.write(mapEntry.getKey() + \"\t\" + mapEntry.getValue());\n        writer.newLine();\n      }\n    }\n catch (    IOException io) {\n      logger.error(ERR_PLUGIN_REFERENT_CLOSE_LOGFILE,io.getMessage());\n    }\n  }\n}\n
protected void prepareMyRecordsIfNeeded(ProtocolMessage pm){\n  if (pm.getRecords() != null && !pm.getRecords().isEmpty()) {\n    byte[] records=recordHandler.wrapData(messageBytesCollector.getProtocolMessageBytes(),pm.getProtocolMessageType(),pm.getRecords());\n    messageBytesCollector.appendRecordBytes(records);\n    messageBytesCollector.flushProtocolMessageBytes();\n  }\n}\n
private void processNotification(SessionNotification snot,boolean isLocal){\n  SessionInfo info=snot.getSessionInfo();\n  sessionDebug.message(\"SESSION NOTIFICATION : \" + info.toXMLString());\n  if (!info.getState().equals(\"valid\")) {\n    if (isLocal) {\n      sessionCache.removeLocalSID(info);\n    }\n else {\n      sessionCache.removeRemoteSID(info);\n    }\n    return;\n  }\n  SessionID sid=new SessionID(info.getSessionID());\n  Session session=sessionCache.readSession(sid);\n  try {\n    if (session == null) {\n      return;\n    }\n    session.update(info);\n  }\n catch (  Exception e) {\n    sessionDebug.error(\"SessionNotificationHandler:processNotification : \",e);\n    sessionCache.removeSID(sid);\n    return;\n  }\n  SessionEventType sessionEventType=SessionEventType.fromCode(snot.getNotificationType());\n  SessionEvent evt=new SessionEvent(session,sessionEventType,snot.getNotificationTime());\n  Session.invokeListeners(evt);\n}\n
public LineUnavailableException(){\n  super();\n}\n
@NonNull public final Closeable consume(@NonNull Runnable run){\n  RunnableUpdatable ru=new RunnableUpdatable(this,run);\n  addUpdatable(ru);\n  return ru;\n}\n
@Override public void updateDrawState(TextPaint ds){\n  ds.setColor(editorDelegate.mEditText.getCurrentTextColor());\n  ds.setUnderlineText(false);\n}\n
DeqSpliterator(ArrayDeque<E> deq,int origin,int fence){\n  this.deq=deq;\n  this.index=origin;\n  this.fence=fence;\n}\n
public @CheckForNull Queue.Item run2(@Nonnull String replacementMainScript,@Nonnull Map<String,String> replacementLoadedScripts){\n  List<Action> actions=new ArrayList<Action>();\n  CpsFlowExecution execution=getExecution();\n  if (execution == null) {\n    return null;\n  }\n  actions.add(new ReplayFlowFactoryAction(replacementMainScript,replacementLoadedScripts,execution.isSandbox()));\n  actions.add(new CauseAction(new Cause.UserIdCause(),new ReplayCause(run)));\n  for (  Class<? extends Action> c : COPIED_ACTIONS) {\n    actions.addAll(run.getActions(c));\n  }\n  return ParameterizedJobMixIn.scheduleBuild2(run.getParent(),0,actions.toArray(new Action[actions.size()]));\n}\n
private static boolean shouldParkAfterFailedAcquire(Node pred,Node node){\n  int ws=pred.waitStatus;\n  if (ws == Node.SIGNAL)   return true;\n  if (ws > 0) {\n    do {\n      node.prev=pred=pred.prev;\n    }\n while (pred.waitStatus > 0);\n    pred.next=node;\n  }\n else {\n    compareAndSetWaitStatus(pred,ws,Node.SIGNAL);\n  }\n  return false;\n}\n
public CharArrayWriter(){\n  this(32);\n}\n
public LinkedHashMapEntry(final String... ldifLines){\n  this(Requests.newAddRequest(ldifLines));\n}\n
public boolean useStartTLS(){\n  return state.useStartTLS;\n}\n
public List<VerificationOK> verify(X509Certificate signCert,X509Certificate issuerCert,Date signDate) throws GeneralSecurityException, IOException {\n  List<VerificationOK> result=new ArrayList<>();\n  int validCrlsFound=0;\n  if (crls != null) {\n    for (    X509CRL crl : crls) {\n      if (verify(crl,signCert,issuerCert,signDate))       validCrlsFound++;\n    }\n  }\n  boolean online=false;\n  if (onlineCheckingAllowed && validCrlsFound == 0) {\n    if (verify(getCRL(signCert,issuerCert),signCert,issuerCert,signDate)) {\n      validCrlsFound++;\n      online=true;\n    }\n  }\n  LOGGER.info(\"Valid CRLs found: \" + validCrlsFound);\n  if (validCrlsFound > 0) {\n    result.add(new VerificationOK(signCert,this.getClass(),\"Valid CRLs found: \" + validCrlsFound + (online ? \" (online)\" : \"\")));\n  }\n  if (verifier != null)   result.addAll(verifier.verify(signCert,issuerCert,signDate));\n  return result;\n}\n
public void windowDeactivated(WindowEvent e){\n}\n
public void fix_selected_items(){\n  if (board_is_read_only)   return;\n  if (!is_StateSelectedItem())   return;\n  ((StateSelectedItem)interactive_state).fix_items();\n}\n
public javax.sip.address.Address createAddress(String displayName,javax.sip.address.URI uri){\n  if (uri == null)   throw new NullPointerException(\"null  URI\");\n  AddressImpl addressImpl=new AddressImpl();\n  if (displayName != null)   addressImpl.setDisplayName(displayName);\n  addressImpl.setURI(uri);\n  return addressImpl;\n}\n
public void testClearBitNegativeInside5(){\n  String as=\"-18446744073709551615\";\n  String res=\"-18446744073709551616\";\n  int number=0;\n  BigInteger aNumber=new BigInteger(as);\n  BigInteger result=aNumber.clearBit(number);\n  assertEquals(res,result.toString());\n}\n
public void addConnection(boolean success){\n  if (success) {\n    connectionMonitor.add();\n  }\n else {\n    failureConnectionMonitor.add();\n  }\n}\n
void appendTextChild(int m_char_current_start,int contentLength){\n  int w0=TEXT_NODE;\n  int w1=currentParent;\n  int w2=m_char_current_start;\n  int w3=contentLength;\n  int ourslot=appendNode(w0,w1,w2,w3);\n  previousSibling=ourslot;\n}\n
private static void assertEcho(String result,String expected){\n  assertTrue(result.indexOf(\"<p>\" + expected + \"</p>\") > 0);\n}\n
public SQLSyntaxErrorException(String reason,Throwable cause){\n  super(reason,cause);\n}\n
public static MetricsConfiguration create(Map<String,Object> options) throws ConfigurationException {\n  MetricsConfiguration conf=new MetricsConfiguration();\n  Yaml yaml=new Yaml();\n  String str=yaml.dumpAsMap(options);\n  conf.values=yaml.loadAs(str,MetricsConfiguration.Values.class);\n  return conf;\n}\n
public static Map appendElementToMap(String key,Set values,Map toMap){\n  if ((key != null) && (values != null) && (!values.isEmpty())&& (toMap != null)) {\n    Set previousValues=(Set)toMap.get(key);\n    if ((previousValues != null) && (!previousValues.isEmpty())) {\n      previousValues.addAll(values);\n    }\n else {\n      toMap.put(key,values);\n    }\n  }\n  return toMap;\n}\n
public final Node pop(){\n  m_firstFree--;\n  Node n=m_map[m_firstFree];\n  m_map[m_firstFree]=null;\n  return n;\n}\n
public PasswordPolicyException(String msg){\n  super(msg);\n}\n
public IDMSecurityContextFactory(List<ScriptEntry> augmentationScripts){\n  this.augmentationScripts=augmentationScripts;\n}\n
public void addCharOption(LocalizableMessage c,LocalizableMessage description,MenuCallback<T> callback){\n  charKeys.add(c);\n  charSynopsis.add(description);\n  charCallbacks.add(callback);\n}\n
public boolean equals(Object obj){\n  if (obj == null)   return false;\n  if (!(obj instanceof ParsePosition))   return false;\n  ParsePosition other=(ParsePosition)obj;\n  return (index == other.index && errorIndex == other.errorIndex);\n}\n
public static int countByField2(boolean field2){\n  return getPersistence().countByField2(field2);\n}\n
public void appendBits(int value,int numBits){\n  if (numBits < 0 || numBits > 32) {\n    throw new IllegalArgumentException(\"Num bits must be between 0 and 32\");\n  }\n  ensureCapacity(size + numBits);\n  for (int numBitsLeft=numBits; numBitsLeft > 0; numBitsLeft--) {\n    appendBit(((value >> (numBitsLeft - 1)) & 0x01) == 1);\n  }\n}\n
private int yearMonthToDayOfYear(int prolepticYear,int month){\n  int epochMonthFirst=yearToEpochMonth(prolepticYear);\n  return epochMonthToEpochDay(epochMonthFirst + month) - epochMonthToEpochDay(epochMonthFirst);\n}\n
@Override public boolean equals(Object o){\n  if (o == null) {\n    return false;\n  }\n  if (o == this) {\n    return true;\n  }\n  if (!(o instanceof SearchFilter)) {\n    return false;\n  }\n  SearchFilter f=(SearchFilter)o;\n  if (filterType != f.filterType) {\n    return false;\n  }\nswitch (filterType) {\ncase AND:\ncase OR:\n    return andOrEqual(f);\ncase NOT:\n  return notComponent.equals(f.notComponent);\ncase SUBSTRING:\nreturn substringEqual(f);\ncase PRESENT:\nreturn attributeDescription.equals(f.attributeDescription);\ncase EXTENSIBLE_MATCH:\nreturn extensibleEqual(f);\ncase EQUALITY:\ncase APPROXIMATE_MATCH:\ncase GREATER_OR_EQUAL:\ncase LESS_OR_EQUAL:\nreturn attributeDescription.equals(f.attributeDescription) && assertionValue.equals(f.assertionValue);\ndefault :\nreturn false;\n}\n}\n
public RequireHeader createRequireHeader(String optionTag) throws ParseException {\n  if (optionTag == null)   throw new NullPointerException(\"null optionTag\");\n  Require require=new Require();\n  require.setOptionTag(optionTag);\n  return require;\n}\n
public void testEntrySetSetValue(){\n  TreeMap<String,String> map=new TreeMap<String,String>();\n  map.put(\"A\",\"a\");\n  map.put(\"B\",\"b\");\n  map.put(\"C\",\"c\");\n  Iterator<Entry<String,String>> iterator=map.entrySet().iterator();\n  Entry<String,String> entryA=iterator.next();\n  assertEquals(\"a\",entryA.setValue(\"x\"));\n  assertEquals(\"x\",entryA.getValue());\n  assertEquals(\"x\",map.get(\"A\"));\n  Entry<String,String> entryB=iterator.next();\n  assertEquals(\"b\",entryB.setValue(\"y\"));\n  Entry<String,String> entryC=iterator.next();\n  assertEquals(\"c\",entryC.setValue(\"z\"));\n  assertEquals(\"y\",entryB.getValue());\n  assertEquals(\"y\",map.get(\"B\"));\n  assertEquals(\"z\",entryC.getValue());\n  assertEquals(\"z\",map.get(\"C\"));\n}\n
@Override public boolean onCreateOptionsMenu(Menu menu){\n  menu.add(Menu.NONE,MENU_HELP,Menu.NONE,getString(R.string.help)).setIcon(android.R.drawable.ic_menu_help).setAlphabeticShortcut(\'h\');\n  return super.onCreateOptionsMenu(menu);\n}\n
public XObject eval(Node contextNode,String str) throws TransformerException {\n  return eval(contextNode,str,contextNode);\n}\n
public static boolean isVersionNewer(){\n  if (!evaluatedUpgradeVersion) {\n    isVersionNewer=isVersionNewer(getCurrentVersion(),getWarFileVersion());\n    evaluatedUpgradeVersion=true;\n  }\n  return isVersionNewer;\n}\n
public void startElement(StylesheetHandler handler,String uri,String localName,String rawName,Attributes attributes) throws org.xml.sax.SAXException {\n  if (m_savedLastOrder == null)   m_savedLastOrder=new IntStack();\n  m_savedLastOrder.push(getElemDef().getLastOrder());\n  getElemDef().setLastOrder(-1);\n}\n
@Overridden boolean equalsCommon(CraftMetaItem that){\n  return ((this.hasDisplayName() ? that.hasDisplayName() && this.displayName.equals(that.displayName) : !that.hasDisplayName())) && (this.hasEnchants() ? that.hasEnchants() && this.enchantments.equals(that.enchantments) : !that.hasEnchants()) && (this.hasLore() ? that.hasLore() && this.lore.equals(that.lore) : !that.hasLore())&& (this.hasRepairCost() ? that.hasRepairCost() && this.repairCost == that.repairCost : !that.hasRepairCost())&& (this.unhandledTags.equals(that.unhandledTags))&& (this.hideFlag == that.hideFlag);\n}\n
public NonReadableChannelException(){\n}\n
public boolean isRoot(){\n  return getParent() == null;\n}\n
protected KeyListener createKeyListener(){\n  return getHandler();\n}\n
public SpinnerListModel(){\n  this(new Object[]{\"empty\"});\n}\n
public boolean release(DTM dtm,boolean shouldHardDelete){\n  if (m_rtfdtm_stack != null && m_rtfdtm_stack.contains(dtm)) {\n    return false;\n  }\n  return m_dtmManager.release(dtm,shouldHardDelete);\n}\n
private static Object maskNull(Object key){\n  return (key == null ? NULL_KEY : key);\n}\n
private void DrawViewsAtList(){\n  for (int i=0; i < listViews.size(); ++i) {\n    DetailView dvView=listViews.get(i);\n    View vChild=getChildAt(i);\n    int iL=dvView.getPoint().x * mUnitWidth;\n    int iT=dvView.getPoint().y * mUnitHeight;\n    int iR=iL + dvView.getWidthNum() * mUnitWidth;\n    int iB=iT + dvView.getHeightNum() * mUnitHeight;\n    vChild.setLeft(iL + mViewPadding);\n    vChild.setTop(iT + mViewPadding);\n    vChild.setRight(iR - mViewPadding);\n    vChild.setBottom(iB - mViewPadding);\n  }\n}\n
public boolean typesOnly(){\n  return typesOnly;\n}\n
public static void badPop(MethodNode mn){\n  if (AccessHelper.isAbstract(mn.access)) {\n    return;\n  }\n  for (  AbstractInsnNode ain : mn.instructions.toArray()) {\n    int op=ain.getOpcode();\n    if (op == Opcodes.ALOAD || op == Opcodes.ILOAD || op == Opcodes.FLOAD) {\n      VarInsnNode vin=(VarInsnNode)ain;\n      mn.instructions.insert(vin,new InsnNode(Opcodes.POP2));\n      mn.instructions.insertBefore(vin,new VarInsnNode(op,vin.var));\n      mn.instructions.insertBefore(vin,new VarInsnNode(op,vin.var));\n    }\n  }\n}\n
protected static void parseCondFlag(String line,RewriteCond condition,String flag){\n  if (flag.equals(\"NC\") || flag.equals(\"nocase\")) {\n    condition.setNocase(true);\n  }\n else   if (flag.equals(\"OR\") || flag.equals(\"ornext\")) {\n    condition.setOrnext(true);\n  }\n else {\n    throw new IllegalArgumentException(\"Invalid flag in: \" + line + \" flags: \"+ flag);\n  }\n}\n
public static void main(final String[] args){\n  DOMTestCase.doMain(characterdatareplacedataexceedslengthofarg.class,args);\n}\n
TokenEndpointAuthMethod(String type){\n  this.type=type;\n}\n
public void resetWait(){\n  spamChecker.resetSpamCheck(getWaitPeriod());\n}\n
public static String encode(byte[] source,int off,int len,byte[] alphabet,boolean doPadding){\n  byte[] outBuff=encode(source,off,len,alphabet,Integer.MAX_VALUE);\n  int outLen=outBuff.length;\n  while (doPadding == false && outLen > 0) {\n    if (outBuff[outLen - 1] != \'=\') {\n      break;\n    }\n    outLen-=1;\n  }\n  return new String(outBuff,0,outLen);\n}\n
public com.sun.identity.wsfederation.jaxb.wsaddr.RelatesToElement createRelatesToElement() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.wsfederation.jaxb.wsaddr.impl.RelatesToElementImpl();\n}\n
public final void testReadbyteArrayintint02() throws IOException {\n  assertEquals(0,MY_MESSAGE_LEN % CHUNK_SIZE);\n  for (int ii=0; ii < algorithmName.length; ii++) {\n    try {\n      MessageDigest md=MessageDigest.getInstance(algorithmName[ii]);\n      InputStream is=new ByteArrayInputStream(myMessage);\n      DigestInputStream dis=new DigestInputStream(is,md);\n      byte[] bArray=new byte[MY_MESSAGE_LEN];\n      for (int i=0; i < MY_MESSAGE_LEN / CHUNK_SIZE; i++) {\n        assertTrue(\"retval\",dis.read(bArray,i * CHUNK_SIZE,CHUNK_SIZE) == CHUNK_SIZE);\n      }\n      assertTrue(\"bArray\",Arrays.equals(myMessage,bArray));\n      assertTrue(\"update\",Arrays.equals(dis.getMessageDigest().digest(),MDGoldenData.getDigest(algorithmName[ii])));\n      return;\n    }\n catch (    NoSuchAlgorithmException e) {\n    }\n  }\n  fail(getName() + \": no MessageDigest algorithms available - test not performed\");\n}\n
public RequirementsBuilder addProperty(String name,RequirementsBuilder builder){\n  Reject.ifNull(name,builder);\n  properties.put(name,prepareChildJsonValue(builder));\n  return this;\n}\n
@Override public void flush(){\n}\n
public int start(int group){\n  if (first < 0)   throw new IllegalStateException(\"No match available\");\n  if (group < 0 || group > groupCount())   throw new IndexOutOfBoundsException(\"No group \" + group);\n  return groups[group * 2];\n}\n
public FeatureDescriptor(){\n}\n
public static void deleteApplication(Subject adminSubject,String realm,String name) throws EntitlementException {\n  getApplicationService(adminSubject,realm).deleteApplication(name);\n}\n
RhinoScriptEngine(RhinoScriptEngineFactory factory){\n  Reject.ifNull(factory);\n  this.factory=factory;\n}\n
private void addDITStructureRuleToSchemaFile(String schemaFile,DITStructureRule ditStructureRule,Set<ByteString> values,Set<DITStructureRule> addedDSRs,int depth) throws DirectoryException {\n  if (depth > 20) {\n    LocalizableMessage message=ERR_SCHEMA_MODIFY_CIRCULAR_REFERENCE_DSR.get(ditStructureRule.getNameOrRuleID());\n    throw new DirectoryException(ResultCode.UNWILLING_TO_PERFORM,message);\n  }\n  if (addedDSRs.contains(ditStructureRule)) {\n    return;\n  }\n  for (  DITStructureRule dsr : ditStructureRule.getSuperiorRules()) {\n    if (schemaFile.equals(getElementSchemaFile(dsr)) && !addedDSRs.contains(dsr)) {\n      addDITStructureRuleToSchemaFile(schemaFile,dsr,values,addedDSRs,depth + 1);\n    }\n  }\n  values.add(ByteString.valueOfUtf8(ditStructureRule.toString()));\n  addedDSRs.add(ditStructureRule);\n}\n
public boolean equals(Object obj){\n  return (obj != null && obj instanceof MimeType && getStringValue().equals(((MimeType)obj).getStringValue()));\n}\n
public synchronized boolean addAll(Collection<? extends E> c){\n  modCount++;\n  Object[] a=c.toArray();\n  int numNew=a.length;\n  ensureCapacityHelper(elementCount + numNew);\n  System.arraycopy(a,0,elementData,elementCount,numNew);\n  elementCount+=numNew;\n  return numNew != 0;\n}\n
public TagTreePointer removeAnnotationTag(PdfAnnotation annotation){\n  PdfStructElem structElem=null;\n  PdfDictionary annotDic=annotation.getPdfObject();\n  PdfNumber structParentIndex=(PdfNumber)annotDic.get(PdfName.StructParent);\n  if (structParentIndex != null) {\n    PdfObjRef objRef=document.getStructTreeRoot().findObjRefByStructParentIndex(annotDic.getAsDictionary(PdfName.P),structParentIndex.intValue());\n    if (objRef != null) {\n      PdfStructElem parent=(PdfStructElem)objRef.getParent();\n      parent.removeKid(objRef);\n      structElem=parent;\n    }\n  }\n  annotDic.remove(PdfName.StructParent);\n  if (structElem != null) {\n    return new TagTreePointer(document).setCurrentStructElem(structElem);\n  }\n  return null;\n}\n
protected PdfString(byte[] content,boolean hexWriting){\n  super(content);\n  this.hexWriting=hexWriting;\n}\n
protected SearchResults(Connection connection,ConnectionEntryReader ldapSearchResult,Connection conn,DataLayer dataLayer){\n  this.connection=connection;\n  m_ldapSearchResults=ldapSearchResult;\n  m_conn=conn;\n  m_dataLayer=dataLayer;\n  if (debug.messageEnabled()) {\n    debug.message(\"Constructing SearchResults: \" + this + \" with connection : \"+ conn);\n  }\n}\n
public com.sun.identity.liberty.ws.common.jaxb.ps.StatusElement createStatusElement() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.liberty.ws.common.jaxb.ps.impl.StatusElementImpl();\n}\n
@Override public String generateName(final IntUnaryOperator randomInRange,final int length){\n  if (length == 0) {\n    return \"LENGTH_WAS_ZERO\";\n  }\n  final StringBuilder sb=new StringBuilder();\n  final int initialSequenceIndex=randomInRange.applyAsInt(sequences.size());\n  final String initialSequence=sequences.get(initialSequenceIndex);\n  sb.append(initialSequence);\n  char previous=initialSequence.charAt(0);\n  char current=initialSequence.charAt(1);\n  for (int i=2; i < length; ++i) {\n    final String key=previous + \"\" + current;\n    try {\n      final char next=chooseNextCharacter(randomInRange,key);\n      sb.append(next);\n      previous=current;\n      current=next;\n    }\n catch (    final NoSuchElementException e) {\n      break;\n    }\n  }\n  return formatName(sb.toString());\n}\n
@Override public String toStringImpl(){\n  return \"*******\";\n}\n
private void exitRecordingMode(boolean isInRecordingMode){\n  refreshImageButton(mIsPlaying);\n  refreshActionMenuItem(mIsPlaying);\n  refreshPopupMenuItem(mIsPlaying);\n  refreshActionMenuPower(true);\n  if (!isInRecordingMode) {\n    mIsInRecordingMode=false;\n    switchRecordLayout(isInRecordingMode);\n  }\n}\n
public void addAttribute(Attribute attribute,Object value,int beginIndex,int endIndex){\n  if (attribute == null) {\n    throw new NullPointerException();\n  }\n  if (beginIndex < 0 || endIndex > length() || beginIndex >= endIndex) {\n    throw new IllegalArgumentException(\"Invalid substring range\");\n  }\n  addAttributeImpl(attribute,value,beginIndex,endIndex);\n}\n
public boolean isBedSpawn(){\n  return this.isBedSpawn;\n}\n
public void insert_wstring(String value) throws org.omg.DynamicAny.DynAnyPackage.TypeMismatch, org.omg.DynamicAny.DynAnyPackage.InvalidValue {\n  org.omg.CORBA.portable.ServantObject $so=_servant_preinvoke(\"insert_wstring\",_opsClass);\n  DynAnyOperations $self=(DynAnyOperations)$so.servant;\n  try {\n    $self.insert_wstring(value);\n  }\n  finally {\n    _servant_postinvoke($so);\n  }\n}\n
public void test_parkUntil_3() throws Exception {\n  CyclicBarrier barrier=new CyclicBarrier(1);\n  Parker parker=new Parker(barrier,true,1000);\n  Thread parkerThread=new Thread(parker);\n  UNSAFE.unpark(parkerThread);\n  parkerThread.start();\n  parker.assertDurationIsInRange(0);\n  parkerThread.join();\n}\n
static int applyMaskPenaltyRule1(ByteMatrix matrix){\n  return applyMaskPenaltyRule1Internal(matrix,true) + applyMaskPenaltyRule1Internal(matrix,false);\n}\n
public static void addAttributeToSchema(ServiceSchema serviceSchema,Node attributeSchemaNode) throws UpgradeException {\n  String classMethod=\"UpgradeUtils:addAttributeToSchema: \";\n  if (debug.messageEnabled()) {\n    debug.message(classMethod + \"Adding attributeschema :\" + \"for service :\"+ serviceSchema.getName());\n  }\n  ByteArrayInputStream bis=null;\n  try {\n    bis=new ByteArrayInputStream(XMLUtils.print(attributeSchemaNode).getBytes());\n    serviceSchema.addAttributeSchema(bis);\n  }\n catch (  SMSException sme) {\n    debug.error(classMethod + \"Cannot add attribute schema for \" + serviceSchema.getName(),sme);\n    throw new UpgradeException(sme.getMessage());\n  }\ncatch (  SSOException ssoe) {\n    debug.error(classMethod + \"Invalid SSOToken : \",ssoe);\n    throw new UpgradeException(ssoe.getMessage());\n  }\n}\n
public static void doSSOFederate(HttpServletRequest request,HttpServletResponse response,PrintWriter out,AuthnRequest authnReq,String spEntityID,String idpMetaAlias,String nameIDFormat,String relayState,SAML2EventLogger auditor) throws SAML2Exception {\n  doSSOFederate(request,response,out,authnReq,spEntityID,idpMetaAlias,nameIDFormat,relayState,null,auditor);\n}\n
public AttributeMissingException(Throwable cause){\n  super(cause);\n}\n
public void processBye(RequestEvent requestEvent,ServerTransaction serverTransactionId){\n  final Request request=requestEvent.getRequest();\n  try {\n    final Response response=messageFactory.createResponse(200,request);\n    ((SipProvider)requestEvent.getSource()).sendResponse(response);\n  }\n catch (  Exception ex) {\n    ex.printStackTrace();\n  }\n}\n
public URIReferenceException(){\n  super();\n}\n
public void ignorableWhitespace(char ch[],int start,int length) throws org.xml.sax.SAXException {\n  if (!m_shouldProcess)   return;\n  getCurrentProcessor().ignorableWhitespace(this,ch,start,length);\n}\n
public void precheck(File file) throws IOException {\n  if (!file.exists()) {\n    logger.severe(ErrorMessage.GENERAL_WRITE_FAILED_BECAUSE_FILE_NOT_FOUND.getMsg(file.getName()));\n    throw new IOException(ErrorMessage.GENERAL_WRITE_FAILED_BECAUSE_FILE_NOT_FOUND.getMsg(file.getName()));\n  }\n  if (!file.canWrite()) {\n    logger.severe(ErrorMessage.GENERAL_WRITE_FAILED.getMsg(file.getName()));\n    throw new IOException(ErrorMessage.GENERAL_WRITE_FAILED.getMsg(file.getName()));\n  }\n  if (file.length() <= MINIMUM_FILESIZE) {\n    logger.severe(ErrorMessage.GENERAL_WRITE_FAILED_BECAUSE_FILE_IS_TOO_SMALL.getMsg(file.getName()));\n    throw new IOException(ErrorMessage.GENERAL_WRITE_FAILED_BECAUSE_FILE_IS_TOO_SMALL.getMsg(file.getName()));\n  }\n}\n
public void initializeProperties(Properties properties){\n  Properties newProps=new Properties();\n  newProps.putAll(systemConfigProps);\n  newProps.putAll(properties);\n  systemConfigProps=newProps;\n}\n
public void processInvite(RequestEvent requestEvent,ServerTransaction serverTransaction){\n  SipProvider sipProvider=(SipProvider)requestEvent.getSource();\n  Request request=requestEvent.getRequest();\n  try {\n    System.out.println(\"shootme: got an Invite sending Trying\");\n    Response response=messageFactory.createResponse(Response.TRYING,request);\n    ServerTransaction st=requestEvent.getServerTransaction();\n    if (st == null) {\n      st=sipProvider.getNewServerTransaction(request);\n    }\n    dialog=st.getDialog();\n    st.sendResponse(response);\n    this.okResponse=messageFactory.createResponse(Response.BUSY_HERE,request);\n    ToHeader toHeader=(ToHeader)okResponse.getHeader(ToHeader.NAME);\n    toHeader.setTag(\"4321\");\n    this.inviteTid=st;\n    this.inviteRequest=request;\n    new Timer().schedule(new MyTimerTask(this),100);\n  }\n catch (  Exception ex) {\n    ex.printStackTrace();\n    System.exit(0);\n  }\n}\n
public static ComponentUI createUI(JComponent x){\n  return new SynthSplitPaneUI();\n}\n
public GridBagConstraints(){\n  gridx=RELATIVE;\n  gridy=RELATIVE;\n  gridwidth=1;\n  gridheight=1;\n  weightx=0;\n  weighty=0;\n  anchor=CENTER;\n  fill=NONE;\n  insets=new Insets(0,0,0,0);\n  ipadx=0;\n  ipady=0;\n}\n
public AuditRequestContext copy(){\n  return new AuditRequestContext(transactionId,properties);\n}\n
public void testConstrStringMathContext(){\n  String a=\"-238768787678287e214\";\n  int precision=5;\n  RoundingMode rm=RoundingMode.CEILING;\n  MathContext mc=new MathContext(precision,rm);\n  String res=\"-23876\";\n  int resScale=-224;\n  BigDecimal result=new BigDecimal(a,mc);\n  assertEquals(\"incorrect value\",res,result.unscaledValue().toString());\n  assertEquals(\"incorrect scale\",resScale,result.scale());\n}\n
private Object readResolve() throws ObjectStreamException {\n  if (primitiveArray) {\n    return convertFromWrapperToPrimitiveTypes();\n  }\n else {\n    return this;\n  }\n}\n
public UtilProxyIDPRequestValidator(String reqBinding,boolean isFromECP,Debug debug,SAML2MetaManager saml2MetaManager){\n  this.debug=debug;\n  this.reqBinding=isFromECP ? SAML2Constants.SOAP : reqBinding;\n  this.saml2MetaManager=saml2MetaManager;\n  debug.message(\"Using request binding: {}\",reqBinding);\n}\n
public void redo() throws CannotRedoException {\n  if (!canRedo()) {\n    throw new CannotRedoException();\n  }\n  hasBeenDone=true;\n}\n
public CHAPPasswordAttribute(String password,int identifier){\n  super(CHAPPasswordAttribute.toOctets(password,identifier));\n  this.password=new String(super.getOctets(),3,super.getOctets().length - 3);\n  this.ident=identifier;\n}\n
public static <T>Expression<T> valueOf(String expression,Class<T> expectedType,Bindings initialBindings) throws ExpressionException {\n  return new Expression<>(expression,expectedType,initialBindings);\n}\n
@After public void clean(){\n  mute(null);\n  mute(null);\n  mute(null);\n}\n
public void testAlgorithmParameterGenerator09() throws NoSuchAlgorithmException {\n  if (!DSASupported) {\n    fail(validAlgName + \" algorithm is not supported\");\n    return;\n  }\n  AlgorithmParameterGenerator apg;\n  for (int i=0; i < algs.length; i++) {\n    apg=AlgorithmParameterGenerator.getInstance(algs[i],validProvider);\n    assertEquals(\"Incorrect algorithm\",apg.getAlgorithm(),algs[i]);\n    assertEquals(\"Incorrect provider\",apg.getProvider(),validProvider);\n  }\n}\n
@Override public E remove(int index){\n  Object[] a=array;\n  int s=size;\n  if (index >= s) {\n    throwIndexOutOfBoundsException(index,s);\n  }\n  @SuppressWarnings(\"unchecked\") E result=(E)a[index];\n  System.arraycopy(a,index + 1,a,index,--s - index);\n  a[s]=null;\n  size=s;\n  modCount++;\n  return result;\n}\n
public void fileNotFound(){\n}\n
int CountRange(int NumofGlyphs,int Type){\n  int num=0;\n  char Sid;\n  int i=1, nLeft;\n  while (i < NumofGlyphs) {\n    num++;\n    Sid=getCard16();\n    if (Type == 1)     nLeft=getCard8();\n else     nLeft=getCard16();\n    i+=nLeft + 1;\n  }\n  return num;\n}\n
public void printStackTrace(){\n  printStackTrace(new java.io.PrintWriter(System.err,true));\n}\n
private void updateDNValue(){\n  String attr=(String)namingAttribute.getSelectedItem();\n  for (int i=0; i < NAMING_ATTRIBUTE_TEXTFIELDS.length; i++) {\n    if (attr.equalsIgnoreCase(NAMING_ATTRIBUTES[i])) {\n      String value=NAMING_ATTRIBUTE_TEXTFIELDS[i].getText().trim();\n      dn.setText(attr + \"=\" + value+ \",\"+ parentNode.getDN());\n      break;\n    }\n  }\n}\n
@BeforeClass public void startServer() throws Exception {\n  TestCaseUtils.startServer();\n}\n
public PdfADocument(PdfWriter writer,PdfAConformanceLevel conformanceLevel,PdfOutputIntent outputIntent){\n  super(writer);\n  setChecker(conformanceLevel);\n  addOutputIntent(outputIntent);\n}\n
public FrameBodyTSRC(byte textEncoding,String text){\n  super(textEncoding,text);\n}\n
private static int lastIndexOf(Object o,Object[] elements,int index){\n  if (o == null) {\n    for (int i=index; i >= 0; i--)     if (elements[i] == null)     return i;\n  }\n else {\n    for (int i=index; i >= 0; i--)     if (o.equals(elements[i]))     return i;\n  }\n  return -1;\n}\n
public XMLFilterImpl(XMLReader parent){\n  setParent(parent);\n}\n
@Override public int hashCode(){\n  int hash=5;\n  hash=59 * hash + Objects.hashCode(this.name);\n  hash=59 * hash + Objects.hashCode(this.description);\n  return hash;\n}\n
public void testPowNegativeNumToEvenExp(){\n  byte aBytes[]={50,-26,90,69,120,32,63,-103,-14,35};\n  int aSign=-1;\n  int exp=4;\n  byte rBytes[]={102,107,-122,-43,-52,-20,-27,25,-9,88,-13,75,78,81,-33,-77,39,27,-37,106,121,-73,108,-47,-101,80,-25,71,13,94,-7,-33,1,-17,-65,-70,-61,-3,-47};\n  BigInteger aNumber=new BigInteger(aSign,aBytes);\n  BigInteger result=aNumber.pow(exp);\n  byte resBytes[]=new byte[rBytes.length];\n  resBytes=result.toByteArray();\n  for (int i=0; i < resBytes.length; i++) {\n    assertTrue(resBytes[i] == rBytes[i]);\n  }\n  assertEquals(\"incorrect sign\",1,result.signum());\n}\n
public static boolean startupCalled(){\n  return startupCalled;\n}\n
public static void sendAlertNotification(AlertGenerator generator,String alertType,LocalizableMessage alertMessage){\n  DirectoryServer.sendAlertNotification(generator,alertType,alertMessage);\n}\n
public synchronized void mark(int readlimit){\n  marklimit=readlimit;\n  markpos=pos;\n}\n
public boolean isDefaultButton(){\n  JRootPane root=SwingUtilities.getRootPane(this);\n  if (root != null) {\n    return root.getDefaultButton() == this;\n  }\n  return false;\n}\n
public static Cookie createCookie(String cookieValue,String cookieDomain){\n  String cookieName=getCookieName();\n  if (utilDebug.messageEnabled()) {\n    utilDebug.message(\"cookieName=\'{}\', cookieValue=\'{}\', cookieDomain=\'{}\'\",cookieName,cookieValue,cookieDomain);\n  }\n  return (createCookie(cookieName,cookieValue,cookieDomain));\n}\n
public void resumeEncoding(){\n  this.suspendEncoding=false;\n}\n
public int plaline_len(){\n  return lines_list.size();\n}\n
private void seekStation(final int station,boolean direction){\n  startAnimation();\n  refreshImageButton(false);\n  refreshActionMenuItem(false);\n  refreshPopupMenuItem(false);\n  refreshActionMenuPower(false);\n  mService.seekStationAsync(FmRadioUtils.computeFrequency(station),direction);\n}\n
private void reportInterruptAfterWait(int interruptMode) throws InterruptedException {\n  if (interruptMode == THROW_IE)   throw new InterruptedException();\n else   if (interruptMode == REINTERRUPT)   selfInterrupt();\n}\n
@Override public void addRuleInstances(Digester digester){\n  digester.addRule(prefix + \"user\",new MemoryUserRule());\n}\n
public com.sun.identity.liberty.ws.common.jaxb.xmlsig.SignedInfoElement createSignedInfoElement() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.liberty.ws.common.jaxb.xmlsig.impl.SignedInfoElementImpl();\n}\n
public com.sun.identity.saml2.jaxb.xmlenc.ReferenceListType.KeyReference createReferenceListTypeKeyReference() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.saml2.jaxb.xmlenc.impl.ReferenceListTypeImpl.KeyReferenceImpl();\n}\n
private void initData(Context context){\n  scroller=new WheelScroller(getContext(),scrollingListener);\n  mPaintLineCenter=new Paint();\n  mPaintLineCenter.setColor(DefaultConfig.COLOR);\n  mPaintLineCenter.setAntiAlias(true);\n  mPaintLineCenter.setStrokeWidth(1);\n  mPaintLineCenter.setStyle(Paint.Style.FILL);\n  mPaintLineRight=new Paint();\n  mPaintLineRight.setColor(0xffe8e8e8);\n  mPaintLineRight.setAntiAlias(true);\n  mPaintLineRight.setStrokeWidth(1);\n  mPaintLineRight.setStyle(Paint.Style.FILL);\n  mPaintRectCenter=new Paint();\n  mPaintRectCenter.setColor(DefaultConfig.COLOR);\n  mPaintRectCenter.setAlpha((int)(0.1 * 255));\n  mPaintRectCenter.setAntiAlias(true);\n  mPaintRectCenter.setStyle(Paint.Style.FILL);\n  mLineRightMar=context.getResources().getDimensionPixelSize(R.dimen.picker_line_mar);\n  defaultColor=DefaultConfig.TV_NORMAL_COLOR;\n  selectorColor=DefaultConfig.TV_SELECTOR_COLOR;\n}\n
@Override public synchronized void clear(){\n  if (null != factory) {\n    final Iterator<PooledSoftReference<T>> iter=idleReferences.iterator();\n    while (iter.hasNext()) {\n      try {\n        final PooledSoftReference<T> ref=iter.next();\n        if (null != ref.getObject()) {\n          factory.destroyObject(ref);\n        }\n      }\n catch (      final Exception e) {\n      }\n    }\n  }\n  idleReferences.clear();\n  pruneClearedReferences();\n}\n
public SAMLToken(String primaryKey,String secondaryKey,long expiryTime,Object token){\n  this.primaryKey=primaryKey;\n  this.secondaryKey=secondaryKey;\n  this.expiryTime=expiryTime;\n  this.token=token;\n}\n
public String encode(){\n  return encode(new StringBuilder()).toString();\n}\n
public boolean isFileHidingEnabled(){\n  return useFileHiding;\n}\n
private void fireMenuKeyReleased(MenuKeyEvent event){\n  Object[] listeners=listenerList.getListenerList();\n  for (int i=listeners.length - 2; i >= 0; i-=2) {\n    if (listeners[i] == MenuKeyListener.class) {\n      ((MenuKeyListener)listeners[i + 1]).menuKeyReleased(event);\n    }\n  }\n}\n
public static Message sendRequest(Message req,String connectTo) throws SOAPBindingException, SOAPFaultException {\n  return sendRequest(req,connectTo,null,null);\n}\n
@AfterClass public static void cleanupClass(){\n  try {\n    Misc.deleteDirectorySimple(scenario.getRepositoryLocation());\n  }\n catch (  Exception ignore) {\n    System.err.println(\"cannot remove \" + scenario.getRepositoryLocation());\n  }\n}\n
public KeyGenerationParameters(SecureRandom random,int strength){\n  this.random=random;\n  this.strength=strength;\n}\n
public static Map<String,Set<String>> cloneMap(Map<String,Set<String>> map){\n  Map<String,Set<String>> clone=new HashMap<String,Set<String>>();\n  for (  String key : map.keySet()) {\n    Set<String> set=new HashSet<String>();\n    Set<String> orig=(Set<String>)map.get(key);\n    set.addAll(orig);\n    clone.put(key,set);\n  }\n  return clone;\n}\n
public FrameBodyTDRC(FrameBodyTIME body){\n  originalID=ID3v23Frames.FRAME_ID_V3_TIME;\n  time=body.getText();\n  setHoursOnly(body.isHoursOnly());\n  setObjectValue(DataTypes.OBJ_TEXT_ENCODING,TextEncoding.ISO_8859_1);\n  setObjectValue(DataTypes.OBJ_TEXT,getFormattedText());\n}\n
private void appendNodeValue(String value,boolean forAttribute) throws IOException {\n  if (value == null) {\n    value=\"\";\n  }\n  write(Utils.escapeXML(value,forAttribute,true));\n}\n
public com.sun.identity.saml2.jaxb.assertion.ActionElement createActionElement() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.saml2.jaxb.assertion.impl.ActionElementImpl();\n}\n
public boolean validateFileFormat(Path location,Configuration conf){\n  FileSystem fileSystem;\n  try {\n    fileSystem=FileSystem.get(location.toUri(),conf);\n    FileStatus[] items=fileSystem.listStatus(location);\n    for (    FileStatus item : items) {\n      if (item.getPath().getName().startsWith(\"_\")) {\n        continue;\n      }\n else       if (item.getPath().getName().contains(\".avro\")) {\n        logger.debug(item.getPath().getName());\n        logger.info(\"Created File format is AVRO !\");\n        return true;\n      }\n else       logger.debug(item.getPath().getName());\n      logger.error(\"Created File Format is not correct\");\n    }\n  }\n catch (  IOException e) {\n    logger.trace(e.getMessage());\n  }\n  return false;\n}\n
public JScrollBar createHorizontalScrollBar(){\n  return new ScrollBar(JScrollBar.HORIZONTAL);\n}\n
public MidiEvent(MidiMessage message,long tick){\n  this.message=message;\n  this.tick=tick;\n}\n
public Object[] toArray(){\n  final ReentrantLock lock=this.lock;\n  lock.lock();\n  try {\n    return q.toArray();\n  }\n  finally {\n    lock.unlock();\n  }\n}\n
private void abortOnSSLException() throws IOException {\n  if (sslException != null) {\n    throw sslException;\n  }\n}\n
public static Properties readPropertiesFile(final File file){\n  if (!file.exists()) {\n    JKIOUtil.logger.info(String.format(\"File %s doesnot exists , return empty map\",file.getName()));\n    return new Properties();\n  }\n  try {\n    InputStream in=new FileInputStream(file);\n    if (in != null) {\n      return readPropertiesStream(in);\n    }\n  }\n catch (  IOException e) {\n    JKExceptionUtil.handle(e);\n  }\n  return null;\n}\n
public Shape modelToView(int pos,Shape a,Position.Bias b) throws BadLocationException {\n  if (!isAllocationValid()) {\n    Rectangle alloc=a.getBounds();\n    setSize(alloc.width,alloc.height);\n  }\n  return super.modelToView(pos,a,b);\n}\n
public java.lang.Object newInstance(java.lang.Class javaContentInterface) throws javax.xml.bind.JAXBException {\n  return super.newInstance(javaContentInterface);\n}\n
public boolean isResourceNameAllowed(){\n  return (isResourceNameAllowed);\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  NodeList elementList;\n  Node nameNode;\n  CharacterData child;\n  String childData;\n  doc=(Document)load(\"staff\",true);\n  elementList=doc.getElementsByTagName(\"address\");\n  nameNode=elementList.item(0);\n  child=(CharacterData)nameNode.getFirstChild();\n  child.replaceData(30,5,\"98665\");\n  childData=child.getData();\n  assertEquals(\"characterdataReplaceDataEndAssert\",\"1230 North Ave. Dallas, Texas 98665\",childData);\n}\n
public ObjectStack(int blocksize){\n  super(blocksize);\n}\n
public boolean isUnderflow(){\n  return this.type == TYPE_UNDERFLOW;\n}\n
public int count(){\n  return padstack_list.size();\n}\n
@Override public final boolean isEnabled(){\n  return isEnabled;\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  NodeList elementList;\n  Node employeeNode;\n  NodeList childList;\n  Node oldChild;\n  Node removedChild;\n  String childName;\n  String oldName;\n  doc=(Document)load(\"hc_staff\",true);\n  elementList=doc.getElementsByTagName(\"p\");\n  employeeNode=elementList.item(1);\n  childList=employeeNode.getChildNodes();\n  oldChild=childList.item(0);\n  oldName=oldChild.getNodeName();\n  removedChild=employeeNode.removeChild(oldChild);\n  assertNotNull(\"notnull\",removedChild);\n  childName=removedChild.getNodeName();\n  assertEquals(\"nodeName\",oldName,childName);\n}\n
public boolean show(Container c,int x,int y,int w,int h){\n  return false;\n}\n
public boolean equals(Object object){\n  return (super.equals(object) && object instanceof RequestingUserName);\n}\n
public Set createAssignableDynamicGroups(Set groupNames) throws AMException, SSOException {\n  Iterator iter=groupNames.iterator();\n  Set groups=new HashSet();\n  while (iter.hasNext()) {\n    String groupDN=AMNamingAttrManager.getNamingAttr(GROUP) + \"=\" + ((String)iter.next())+ \",\"+ super.entryDN;\n    AMAssignableDynamicGroupImpl groupImpl=new AMAssignableDynamicGroupImpl(super.token,groupDN);\n    groupImpl.create();\n    groups.add(groupImpl);\n  }\n  return groups;\n}\n
private Object readResolve(){\n  return object;\n}\n
public static void main(final String[] args){\n  DOMTestCase.doMain(hc_entitiesremovenameditemns1.class,args);\n}\n
public RSInfo(int rsServerId,String rsServerURL,long generationId,byte groupId,int weight){\n  this.rsServerId=rsServerId;\n  this.rsServerURL=rsServerURL;\n  this.generationId=generationId;\n  this.groupId=groupId;\n  this.weight=weight;\n}\n
public KeyBinding(KeyStroke key,String actionName){\n  this.key=key;\n  this.actionName=actionName;\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  NodeList elementList;\n  Element testAddr;\n  Node textNode;\n  int nodeType;\n  doc=(Document)load(\"staff\",false);\n  elementList=doc.getElementsByTagName(\"address\");\n  testAddr=(Element)elementList.item(0);\n  textNode=testAddr.getFirstChild();\n  nodeType=(int)textNode.getNodeType();\n  assertEquals(\"nodeTextNodeTypeAssert1\",3,nodeType);\n}\n
private void updateRingColor(float interpolatedTime,Ring ring){\n  if (interpolatedTime > COLOR_START_DELAY_OFFSET) {\n    ring.setColor(evaluateColorChange((interpolatedTime - COLOR_START_DELAY_OFFSET) / (1.0f - COLOR_START_DELAY_OFFSET),ring.getStartingColor(),ring.getNextColor()));\n  }\n}\n
public Panel(LayoutManager layout){\n  setLayout(layout);\n}\n
public RegexFileFilter(String pattern,int flags){\n  if (pattern == null) {\n    throw new IllegalArgumentException(\"Pattern is missing\");\n  }\n  this.pattern=Pattern.compile(pattern,flags);\n}\n
public AccountUsableResponseControl(boolean isInactive,boolean isReset,boolean isExpired,int remainingGraceLogins,boolean isLocked,int secondsBeforeUnlock){\n  this(false,isInactive,isReset,isExpired,remainingGraceLogins,isLocked,secondsBeforeUnlock);\n}\n
public void invoke(String invokeMethod,Marshallable param,ClientCallback clientCallback){\n  TransactInfo transactInfo=TransactInfo.createDirectInvoke(invokeMethod);\n  mClientProxy.transact(transactInfo,param,clientCallback);\n}\n
public String createHttpConnector(String parent,String address,int port) throws Exception {\n  return createConnector(parent,address,port,false,false);\n}\n
public void testIsSupported1() throws Throwable {\n  Document doc;\n  Node rootNode;\n  boolean state;\n  doc=(Document)load(\"staff\",builder);\n  rootNode=doc.getDocumentElement();\n  state=rootNode.isSupported(\"XXX\",\"1.0\");\n  assertFalse(\"throw_False\",state);\n}\n
public boolean contains(JComponent a,int b,int c){\n  boolean returnValue=((ComponentUI)(uis.elementAt(0))).contains(a,b,c);\n  for (int i=1; i < uis.size(); i++) {\n    ((ComponentUI)(uis.elementAt(i))).contains(a,b,c);\n  }\n  return returnValue;\n}\n
public final void testGetType02(){\n  CRL crl=new MyCRL(null);\n  assertNull(crl.getType());\n}\n
public void processAck(RequestEvent requestEvent,ServerTransaction serverTransaction){\n  SipProvider sipProvider=(SipProvider)requestEvent.getSource();\n  try {\n    logger.info(\"shootme: got an ACK \" + requestEvent.getRequest());\n    TestCase.assertTrue(\"dialog mismatch \",this.dialog == serverTransaction.getDialog());\n    int ackCount=((ApplicationData)dialog.getApplicationData()).ackCount;\n    if (ackCount == 1 && this.sendReInviteFlag) {\n      dialog=inviteTid.getDialog();\n      this.sendReInvite(sipProvider);\n    }\n else     ((ApplicationData)dialog.getApplicationData()).ackCount++;\n  }\n catch (  Exception ex) {\n    String s=\"Unexpected error\";\n    logger.error(s,ex);\n    TestCase.fail(s);\n  }\n}\n
public GSERParser readEndSequence() throws DecodeException {\n  skip(GSER_SP);\n  next(GSER_SEQUENCE_END);\n  return this;\n}\n
public SIPHeader parse() throws ParseException {\n  if (debug)   dbg_enter(\"RSeqParser.parse\");\n  RSeq rseq=new RSeq();\n  try {\n    headerName(TokenTypes.RSEQ);\n    rseq.setHeaderName(SIPHeaderNames.RSEQ);\n    String number=this.lexer.number();\n    try {\n      rseq.setSeqNumber(Long.parseLong(number));\n    }\n catch (    InvalidArgumentException ex) {\n      throw createParseException(ex.getMessage());\n    }\n    this.lexer.SPorHT();\n    this.lexer.match(\'\n\');\n    return rseq;\n  }\n  finally {\n    if (debug)     dbg_leave(\"RSeqParser.parse\");\n  }\n}\n
public boolean offerFirst(E e){\n  addFirst(e);\n  return true;\n}\n
public static void main(final String[] args){\n  DOMTestCase.doMain(hc_characterdatadeletedatagetlengthanddata.class,args);\n}\n
public static void marshal(Object jaxbObject,String xml){\n  _marshal(jaxbObject,xml);\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  Element element;\n  Element child1;\n  Element child2;\n  Element child3;\n  Node appendedChild;\n  NodeList elementList;\n  String nullNS=null;\n  doc=(Document)load(\"staffNS\",false);\n  element=doc.createElementNS(\"http://www.w3.org/DOM\",\"root\");\n  child1=doc.createElementNS(\"http://www.w3.org/DOM/Level1\",\"dom:child\");\n  child2=doc.createElementNS(nullNS,\"child\");\n  child3=doc.createElementNS(\"http://www.w3.org/DOM/Level2\",\"dom:child\");\n  appendedChild=element.appendChild(child1);\n  appendedChild=element.appendChild(child2);\n  appendedChild=element.appendChild(child3);\n  elementList=element.getElementsByTagNameNS(nullNS,\"child\");\n  assertSize(\"elementgetelementsbytagnamens04_1\",1,elementList);\n  elementList=element.getElementsByTagNameNS(\"*\",\"child\");\n  assertSize(\"elementgetelementsbytagnamens04_2\",3,elementList);\n}\n
public PrintWriter log(PrintWriter out){\n  return log(this,out);\n}\n
public boolean isChar(StringLiteral literal,LineCol lineCol,boolean testSymbol) throws SyntaxException {\n  String str=literal.literal();\n  str=str.substring(1);\n  str=str.substring(0,str.length() - 1);\n  if (testSymbol && !literal.literal().startsWith(\"\\'\"))   return false;\n  String s=unescape(str,lineCol);\n  assert s != null;\n  return s.length() == 1;\n}\n
public Builder prohibitedAttributes(final String... attributeNamesOrOIDs){\n  this.prohibitedAttributeOIDs.addAll(asList(attributeNamesOrOIDs));\n  return this;\n}\n
@Override protected void doPost(final HttpServletRequest request,final HttpServletResponse response) throws ServletException, IOException {\n  request.setCharacterEncoding(\"UTF-8\");\n  response.setCharacterEncoding(\"UTF-8\");\n  getResponse(request,response,true);\n}\n
@Parameters({\"parent-realm\",\"entity-type\",\"entity-name\"}) @Test(groups={\"api\",\"memberships\"},expectedExceptions={IdRepoException.class}) public void addItselfAsMember(String parentRealm,String idType,String entityName) throws IdRepoException, SSOException {\n  Object[] params={parentRealm,idType,entityName};\n  entering(\"addItselfAsMember\",params);\n  try {\n    AMIdentity amid=getIdentity(parentRealm,IdUtils.getType(idType),entityName);\n    amid.removeMember(amid);\n  }\n catch (  SSOException e) {\n    log(Level.SEVERE,\"addItselfAsMember\",e.getMessage(),params);\n    e.printStackTrace();\n    throw e;\n  }\n  exiting(\"addItselfAsMember\");\n}\n
public static void initializeConfigurationFramework(){\n  if (!ConfigurationFramework.getInstance().isInitialized()) {\n    try {\n      final Logger configFrameworkLogger=Logger.getLogger(\"com.forgerock.opendj.ldap.config.config\");\n      configFrameworkLogger.setUseParentHandlers(false);\n      ConfigurationFramework.getInstance().initialize();\n      configFrameworkLogger.setUseParentHandlers(true);\n    }\n catch (    ConfigException e) {\n      final LocalizableMessage message=ERROR_CTRL_PANEL_INITIALIZE_CONFIG_OFFLINE.get(e.getLocalizedMessage());\n      logger.error(message);\n      throw new RuntimeException(message.toString(),e);\n    }\n  }\n}\n
public Observable<Void> initializePersistenceObservable(){\n  io.vertx.rx.java.ObservableFuture<Void> resultHandler=io.vertx.rx.java.RxHelper.observableFuture();\n  initializePersistence(resultHandler.toHandler());\n  return resultHandler;\n}\n
public boolean equals(Object object){\n  return (object != null && object instanceof TextSyntax && this.value.equals(((TextSyntax)object).value) && this.locale.equals(((TextSyntax)object).locale));\n}\n
public AuthenticationInfo(Entry authenticationEntry,boolean isRoot){\n  this.authenticationEntry=authenticationEntry;\n  this.isRoot=isRoot;\n  isAuthenticated=authenticationEntry != null;\n  mustChangePassword=false;\n  simpleBindDN=authenticationEntry != null ? authenticationEntry.getName() : null;\n  authorizationEntry=authenticationEntry;\n  saslMechanism=null;\n  authenticationType=AuthenticationType.INTERNAL;\n}\n
public boolean verify(SignerInformationVerifier verifier) throws CMSException {\n  Time signingTime=getSigningTime();\n  if (verifier.hasAssociatedCertificate()) {\n    if (signingTime != null) {\n      X509CertificateHolder dcv=verifier.getAssociatedCertificate();\n      if (!dcv.isValidOn(signingTime.getDate())) {\n        throw new CMSVerifierCertificateNotValidException(\"verifier not valid at signingTime\");\n      }\n    }\n  }\n  return doVerify(verifier);\n}\n
public void mouseWheelMoved(MouseWheelEvent e){\n  getHandler().mouseWheelMoved(e);\n}\n
public void handleButton2Request(RequestInvocationEvent event) throws ModelControlException {\n  try {\n    forwardToAMViewBean();\n  }\n catch (  AMConsoleException e) {\n    setInlineAlertMessage(CCAlert.TYPE_ERROR,\"message.error\",e.getMessage());\n  }\n}\n
public static void serialize(XMPMetaImpl xmp,OutputStream output,SerializeOptions options) throws XMPException {\n  options=options != null ? options : new SerializeOptions();\n  if (options.getSort()) {\n    xmp.sort();\n  }\n  new XMPSerializerRDF().serialize(xmp,output,options);\n}\n
public void firePropertyChange(String propertyName,float oldValue,float newValue){\n}\n
public GenericAgentProfileViewBean(){\n  super(\"GenericAgentProfile\");\n  setDefaultDisplayURL(DEFAULT_DISPLAY_URL);\n}\n
protected void closeStartTag() throws SAXException {\n  if (m_elemContext.m_startTagOpen) {\n    try {\n      if (m_tracer != null)       super.fireStartElem(m_elemContext.m_elementName);\n      int nAttrs=m_attributes.getLength();\n      if (nAttrs > 0) {\n        processAttributes(m_writer,nAttrs);\n        m_attributes.clear();\n      }\n      m_writer.write(\'>\');\n    }\n catch (    IOException e) {\n      throw new SAXException(e);\n    }\n    if (m_CdataElems != null)     m_elemContext.m_isCdataSection=isCdataSection();\n    if (m_doIndent) {\n      m_isprevtext=false;\n      m_preserves.push(m_ispreserve);\n    }\n  }\n}\n
public ID3v24Tag(ByteBuffer buffer,String loggingFilename) throws TagException {\n  frameMap=new LinkedHashMap();\n  encryptedFrameMap=new LinkedHashMap();\n  setLoggingFilename(loggingFilename);\n  this.read(buffer);\n}\n
public boolean isTrustedProvider(String realm,String federationId,String trustedEntityId) throws WSFederationMetaException {\n  boolean result=false;\n  SPSSOConfigElement spconfig=getSPSSOConfig(realm,federationId);\n  if (spconfig != null) {\n    result=isSameCircleOfTrust(spconfig,realm,trustedEntityId);\n  }\n  if (result) {\n    return true;\n  }\n  IDPSSOConfigElement idpconfig=getIDPSSOConfig(realm,federationId);\n  if (idpconfig != null) {\n    return (isSameCircleOfTrust(idpconfig,realm,trustedEntityId));\n  }\n  return false;\n}\n
public static boolean isXML11ValidQName(String str){\n  final int colon=str.indexOf(\':\');\n  if (colon == 0 || colon == str.length() - 1) {\n    return false;\n  }\n  if (colon > 0) {\n    final String prefix=str.substring(0,colon);\n    final String localPart=str.substring(colon + 1);\n    return isXML11ValidNCName(prefix) && isXML11ValidNCName(localPart);\n  }\n else {\n    return isXML11ValidNCName(str);\n  }\n}\n
public String toXML(){\n  StringBuilder stringBuilder=new StringBuilder();\n  return stringBuilder.toString();\n}\n
public static String asHex(long value){\n  return \"0x\" + Long.toHexString(value);\n}\n
public Paragraph(String text){\n  this(new Text(text));\n}\n
@Override public String toString(){\n  StringBuilder b=new StringBuilder(64);\n  b.append(\"name = \" + name + \" \");\n  b.append(\"type = \" + type + \" \");\n  b.append(\"reqTime = \" + reqTime + \" \");\n  b.append(\"required = \" + required + \" \");\n  b.append(\"fragment = \" + fragment + \" \");\n  b.append(\"deferredValue = \" + deferredValue + \" \");\n  b.append(\"expectedTypeName = \" + expectedTypeName + \" \");\n  b.append(\"deferredMethod = \" + deferredMethod + \" \");\n  b.append(\"methodSignature = \" + methodSignature);\n  return b.toString();\n}\n
@Deprecated public boolean equals(String s){\n  if (s == null || mimeType == null)   return false;\n  return isMimeTypeEqual(s);\n}\n
public boolean isMember(SSOToken token) throws SSOException {\n  return (SSOTokenManager.getInstance().isValidToken(token));\n}\n
public void test_MultipleUpdatesInOneTables() throws SQLException {\n  int id=1;\n  String field=\"field3\";\n  String selectQuery=\"SELECT * FROM \" + DatabaseCreator.TEST_TABLE1 + \" WHERE id=\"+ id;\n  Statement statement=conn.createStatement();\n  ResultSet result=statement.executeQuery(selectQuery);\n  assertTrue(\"There is no records with id = \" + id,result.next());\n  result.close();\n  for (int i=0; i < numThreads; i++) {\n    threadPool.runTask(createTask7(id,field));\n  }\n  threadPool.join();\n  double expectedVal=id + numThreads;\n  result=statement.executeQuery(selectQuery);\n  assertTrue(\"There is no records with id = \" + id,result.next());\n  result.close();\n}\n
@Override protected void doCatch(Throwable throwable){\n  exceptionHandler.handle(throwable,getContext(),getRequest(),getResponse());\n}\n
public void actionPerformed(ActionEvent e){\n  JTextComponent target=getTextComponent(e);\n  if (target != null) {\n    ComponentOrientation last=target.getComponentOrientation();\n    ComponentOrientation next;\n    if (last == ComponentOrientation.RIGHT_TO_LEFT)     next=ComponentOrientation.LEFT_TO_RIGHT;\n else     next=ComponentOrientation.RIGHT_TO_LEFT;\n    target.setComponentOrientation(next);\n    target.repaint();\n  }\n}\n
public void clearCachedState(){\n  _autoCommitCached=null;\n  _readOnlyCached=null;\n  if (_conn instanceof DelegatingConnection) {\n    ((DelegatingConnection<?>)_conn).clearCachedState();\n  }\n}\n
private void assertBlockedLongerThanTimeout(long startTime,long endTime,int TIMEOUT){\n  assertTrue(endTime - startTime >= TIMEOUT);\n}\n
public String toString(){\n  return attrSchema.toString();\n}\n
public boolean remove(Object o){\n  return map.remove(o) == PRESENT;\n}\n
@Override public void mark(int readlimit){\n}\n
@Inject public OAuth2Request(JacksonRepresentationFactory jacksonRepresentationFactory,@Assisted Request request){\n  this.jacksonRepresentationFactory=jacksonRepresentationFactory;\n  this.request=request;\n}\n
public static byte[] encode(byte[] data,int off,int length){\n  ByteArrayOutputStream bOut=new ByteArrayOutputStream();\n  try {\n    encoder.encode(data,off,length,bOut);\n  }\n catch (  Exception e) {\n    throw new EncoderException(\"exception encoding Hex string: \" + e.getMessage(),e);\n  }\n  return bOut.toByteArray();\n}\n
public NO_MEMORY(String s,int minor,CompletionStatus completed){\n  super(s,minor,completed);\n}\n
void CreateNonCIDSubrs(int Font,IndexBaseItem PrivateBase,OffsetItem Subrs){\n  OutputList.addLast(new SubrMarkerItem(Subrs,PrivateBase));\n  if (NewSubrsIndexNonCID != null) {\n    OutputList.addLast(new RangeItem(new RandomAccessFileOrArray(rasFactory.createSource(NewSubrsIndexNonCID)),0,NewSubrsIndexNonCID.length));\n  }\n}\n
public int lastIndexOf(String string){\n  return lastIndexOf(string,count);\n}\n
public void testConstructorSignBytesPositive1(){\n  byte aBytes[]={12,56,100,-2,-76,89,45,91,3,-15};\n  int aSign=1;\n  byte rBytes[]={12,56,100,-2,-76,89,45,91,3,-15};\n  BigInteger aNumber=new BigInteger(aSign,aBytes);\n  byte resBytes[]=new byte[rBytes.length];\n  resBytes=aNumber.toByteArray();\n  for (int i=0; i < resBytes.length; i++) {\n    assertTrue(resBytes[i] == rBytes[i]);\n  }\n  assertEquals(\"incorrect sign\",1,aNumber.signum());\n}\n
public static void destroyMBean(ContextResourceLink resourceLink) throws Exception {\n  String mname=createManagedName(resourceLink);\n  ManagedBean managed=registry.findManagedBean(mname);\n  if (managed == null) {\n    return;\n  }\n  String domain=managed.getDomain();\n  if (domain == null)   domain=mserver.getDefaultDomain();\n  ObjectName oname=createObjectName(domain,resourceLink);\n  if (mserver.isRegistered(oname))   mserver.unregisterMBean(oname);\n}\n
public static MemoryMappedFile mmapRO(String path) throws ErrnoException {\n  FileDescriptor fd=Libcore.os.open(path,O_RDONLY,0);\n  long size=Libcore.os.fstat(fd).st_size;\n  long address=Libcore.os.mmap(0L,size,PROT_READ,MAP_SHARED,fd,0);\n  Libcore.os.close(fd);\n  return new MemoryMappedFile(address,size);\n}\n
public boolean isAutoIncrement(int columnIndex) throws SQLException {\n  checkColRange(columnIndex);\n  return colInfo[columnIndex].autoIncrement;\n}\n
protected void cdata(char ch[],int start,final int length) throws org.xml.sax.SAXException {\n  try {\n    final int old_start=start;\n    if (m_elemContext.m_startTagOpen) {\n      closeStartTag();\n      m_elemContext.m_startTagOpen=false;\n    }\n    m_ispreserve=true;\n    if (shouldIndent())     indent();\n    boolean writeCDataBrackets=(((length >= 1) && escapingNotNeeded(ch[start])));\n    if (writeCDataBrackets && !m_cdataTagOpen) {\n      m_writer.write(CDATA_DELIMITER_OPEN);\n      m_cdataTagOpen=true;\n    }\n    if (isEscapingDisabled()) {\n      charactersRaw(ch,start,length);\n    }\n else     writeNormalizedChars(ch,start,length,true,m_lineSepUse);\n    if (writeCDataBrackets) {\n      if (ch[start + length - 1] == \']\')       closeCDATA();\n    }\n    if (m_tracer != null)     super.fireCDATAEvent(ch,old_start,length);\n  }\n catch (  IOException ioe) {\n    throw new org.xml.sax.SAXException(Utils.messages.createMessage(MsgKey.ER_OIERROR,null),ioe);\n  }\n}\n
public Set keySet(){\n  return map.keySet();\n}\n
public void testCertStore07() throws InvalidAlgorithmParameterException, NoSuchAlgorithmException {\n  if (!initParams()) {\n    return;\n  }\n  for (int i=0; i < dValid.length; i++) {\n    for (int j=1; j < invalidValues.length; j++) {\n      try {\n        CertStore.getInstance(dValid[i],dParams,invalidValues[j]);\n        fail(\"NoSuchProviderException must be thrown\");\n      }\n catch (      NoSuchProviderException e) {\n      }\n    }\n  }\n}\n
private void createSourceFiles(File parent,String childContent) throws IOException {\n  if (!parent.exists()) {\n    parent.mkdir();\n  }\n  File d1=new File(parent,\"d1\");\n  File f1a=new File(d1,\"f1a\");\n  File f1b=new File(d1,\"f1b\");\n  File d2=new File(parent,\"d2\");\n  File f2a=new File(d2,\"f2a\");\n  File d2b=new File(d2,\"d2b\");\n  File f2b1=new File(d2b,\"f2b1\");\n  d1.mkdir();\n  d2.mkdir();\n  d2b.mkdir();\n  writeContents(f1a,childContent);\n  writeContents(f1b,childContent);\n  writeContents(f2a,childContent);\n  writeContents(f2b1,childContent);\n}\n
public SubjectDecision evaluate(String realm,SubjectAttributesManager mgr,Subject subject,String resourceName,Map<String,Set<String>> environment) throws EntitlementException {\n  Set<EntitlementSubject> eSubjects=getESubjects();\n  if ((eSubjects != null) && !eSubjects.isEmpty()) {\n    for (    EntitlementSubject e : eSubjects) {\n      SubjectDecision decision=e.evaluate(realm,mgr,subject,resourceName,environment);\n      if (!decision.isSatisfied()) {\n        return decision;\n      }\n    }\n  }\n  return new SubjectDecision(true,Collections.EMPTY_MAP);\n}\n
public Leaves(TreeSpecies species,boolean isDecayable){\n  this(DEFAULT_TYPE,species,isDecayable);\n}\n
public AbstractMethodError(){\n  super();\n}\n
public int hashCode(){\n  int hash=mask;\n  if (rangeSet != null) {\n    hash&=CONTEXTUAL_MASK;\n    hash^=rangeSet.hashCode();\n  }\n  return hash;\n}\n
public static NewSuffixOptions createBaseEntry(List<String> baseDNs){\n  NewSuffixOptions ops=new NewSuffixOptions(baseDNs);\n  ops.type=Type.CREATE_BASE_ENTRY;\n  return ops;\n}\n
private Connection checkState(){\n  if (isClosed()) {\n    throw new IllegalStateException();\n  }\n  return connection;\n}\n
private boolean isPropertyTrue(String propertyName){\n  return \"true\".equalsIgnoreCase(getProperty(propertyName));\n}\n
public static byte[] decode(String data){\n  ByteArrayOutputStream bOut=new ByteArrayOutputStream();\n  try {\n    encoder.decode(data,bOut);\n  }\n catch (  Exception e) {\n    throw new DecoderException(\"exception decoding Hex string: \" + e.getMessage(),e);\n  }\n  return bOut.toByteArray();\n}\n
public static synchronized void clearHyphenationTreeCache(){\n  hTreeCache=new HyphenationTreeCache();\n}\n
private static float centerFromEnd(int[] stateCount,int end){\n  return (float)(end - stateCount[2]) - stateCount[1] / 2.0f;\n}\n
public java.lang.String toString(){\n  return toString(true,false);\n}\n
public ExpressionException(String message){\n  super(message);\n}\n
protected boolean isRepaintingRoot(){\n  return isRepaintingRoot;\n}\n
public Set searchDynamicGroups(String wildcard,int level) throws AMException, SSOException {\n  return searchDynamicGroups(wildcard,null,level);\n}\n
private XingFrame(ByteBuffer header){\n  this.header=header;\n  header.rewind();\n  setVbr();\n  byte flagBuffer[]=new byte[XING_FLAG_BUFFER_SIZE];\n  header.get(flagBuffer);\n  if ((flagBuffer[BYTE_4] & (byte)(1)) != 0) {\n    setFrameCount();\n  }\n  if ((flagBuffer[BYTE_4] & (byte)(1 << 1)) != 0) {\n    setAudioSize();\n  }\n  if (header.limit() >= XING_HEADER_BUFFER_SIZE + LameFrame.LAME_HEADER_BUFFER_SIZE) {\n    header.position(XING_HEADER_BUFFER_SIZE);\n    lameFrame=LameFrame.parseLameFrame(header);\n  }\n}\n
static void storeServerList(Set servers,Map namingAttrs){\n  Set serverList=new HashSet();\n  Set siteList=new HashSet();\n  Iterator iter=servers.iterator();\n  while (iter.hasNext()) {\n    String serverEntry=(String)iter.next();\n    int index=serverEntry.indexOf(delimiter);\n    if (index != -1) {\n      String server=serverEntry.substring(0,index);\n      String serverId=serverEntry.substring(index + 1,serverEntry.length());\n      siteList.add(serverId);\n      index=serverId.indexOf(delimiter);\n      if (index != -1) {\n        serverId=serverId.substring(0,2);\n      }\n      HashSet serverSet=new HashSet();\n      serverSet.add(server);\n      serverList.add(server);\n      namingAttrs.put(serverId,serverSet);\n    }\n else {\n      namingDebug.error(\"Platform Server List entry is invalid:\" + serverEntry);\n    }\n  }\n  namingAttrs.put(Constants.PLATFORM_LIST,serverList);\n  namingAttrs.put(Constants.SITE_ID_LIST,siteList);\n}\n
public DN child(final DN dn){\n  Reject.ifNull(dn);\n  if (dn.isRootDN()) {\n    return this;\n  }\n else   if (isRootDN()) {\n    return dn;\n  }\n else {\n    final RDN[] rdns=new RDN[dn.size()];\n    int i=rdns.length;\n    for (DN next=dn; next.rdn != null; next=next.parent) {\n      rdns[--i]=next.rdn;\n    }\n    DN newDN=this;\n    for (i=0; i < rdns.length; i++) {\n      newDN=new DN(this.schema,newDN,rdns[i]);\n    }\n    return newDN;\n  }\n}\n
public boolean processNotificationHandlerConfig(ErrorLogAccountStatusNotificationHandlerCfg configuration,boolean applyChanges){\n  boolean isAcceptable=true;\n  HashSet<AccountStatusNotificationType> newNotificationTypes=new HashSet<>();\n  for (  ErrorLogAccountStatusNotificationHandlerCfgDefn.AccountStatusNotificationType configNotificationType : configuration.getAccountStatusNotificationType()) {\n    newNotificationTypes.add(getNotificationType(configNotificationType));\n  }\n  if (applyChanges && isAcceptable) {\n    notificationTypes=newNotificationTypes;\n  }\n  return isAcceptable;\n}\n
public com.sun.identity.wsfederation.jaxb.xmlsig.DSAKeyValueElement createDSAKeyValueElement() throws javax.xml.bind.JAXBException {\n  return new com.sun.identity.wsfederation.jaxb.xmlsig.impl.DSAKeyValueElementImpl();\n}\n
static public PrintWriter log(Throwable xcpt,PrintWriter out){\n  out.println(\"-----------\");\n  out.println(xcpt.toString());\n  out.println(\"Stack Trace:\");\n  out.print(getStackTrace(xcpt));\n  out.println(\"-----------\");\n  out.flush();\n  return out;\n}\n
public JKXmlException(String message,Throwable cause){\n  super(message,cause);\n}\n
public DTMIterator createDTMIterator(Object xpathCompiler,int pos){\n  return m_dtmManager.createDTMIterator(xpathCompiler,pos);\n}\n
public FactoryConfigurationError(java.lang.String msg){\n  super(msg);\n}\n
public Period withYears(int years){\n  if (years == this.years) {\n    return this;\n  }\n  return create(years,months,days);\n}\n
public void paintSliderThumbBorder(SynthContext context,Graphics g,int x,int y,int w,int h,int orientation){\n}\n
public Pumpkin(BlockFace direction){\n  this();\n  setFacingDirection(direction);\n}\n
public Guid(long id){\n  _dn=DN.valueOf(\"\");\n  _uniqueId=id;\n}\n
public EncryptableNameIdentifier(String name,String nameQualifier,String format,Date issueInstant,String nonce) throws FSException {\n  if (name == null || nameQualifier == null || issueInstant == null || format == null || nonce == null) {\n    throw new FSException(\"nullInput\",null);\n  }\n  _name=name;\n  _nameQualifier=nameQualifier;\n  _format=format;\n  _nonce=nonce;\n  _issueInstant=issueInstant;\n}\n
public void startElement(String elementNamespaceURI,String elementLocalName,String elementName) throws SAXException {\n  startElement(elementNamespaceURI,elementLocalName,elementName,null);\n}\n
private void init(String servicePrincipal,int mask){\n  if (servicePrincipal == null)   throw new NullPointerException(\"service principal can\'t be null\");\n  if ((mask & ALL) != mask)   throw new IllegalArgumentException(\"invalid actions mask\");\n  this.mask=mask;\n}\n
protected ServerConstraintHandler(){\n}\n
@Inject public OpenIdConnectAuthorizeRequestValidator(ClientRegistrationStore clientRegistrationStore){\n  this.clientRegistrationStore=clientRegistrationStore;\n}\n
public int doFinal(byte[] out,int outOff) throws DataLengthException, IllegalStateException, InvalidCipherTextException {\n  int blockSize=cipher.getBlockSize();\n  int resultLen=0;\n  if (forEncryption) {\n    if (bufOff == blockSize) {\n      if ((outOff + 2 * blockSize) > out.length) {\n        reset();\n        throw new OutputLengthException(\"output buffer too short\");\n      }\n      resultLen=cipher.processBlock(buf,0,out,outOff);\n      bufOff=0;\n    }\n    padding.addPadding(buf,bufOff);\n    resultLen+=cipher.processBlock(buf,0,out,outOff + resultLen);\n    reset();\n  }\n else {\n    if (bufOff == blockSize) {\n      resultLen=cipher.processBlock(buf,0,buf,0);\n      bufOff=0;\n    }\n else {\n      reset();\n      throw new DataLengthException(\"last block incomplete in decryption\");\n    }\n    try {\n      resultLen-=padding.padCount(buf);\n      System.arraycopy(buf,0,out,outOff,resultLen);\n    }\n  finally {\n      reset();\n    }\n  }\n  return resultLen;\n}\n
public static ASN1Primitive convertValueToObject(X509Extension ext) throws IllegalArgumentException {\n  try {\n    return ASN1Primitive.fromByteArray(ext.getValue().getOctets());\n  }\n catch (  IOException e) {\n    throw new IllegalArgumentException(\"can\'t convert extension: \" + e);\n  }\n}\n
private static byte[] procIPv4Addr(String addrStr,BitSet wildCardBitSet,String expr) throws AciException {\n  byte[] addrBytes=new byte[IN4ADDRSZ];\n  String[] s=addrStr.split(\"\\.\",-1);\n  try {\n    if (s.length != IN4ADDRSZ) {\n      LocalizableMessage message=WARN_ACI_SYNTAX_INVALID_IPV4_FORMAT.get(expr);\n      throw new AciException(message);\n    }\n    for (int i=0; i < IN4ADDRSZ; i++) {\n      String quad=s[i].trim();\n      if (quad.equals(\"*\")) {\n        wildCardBitSet.set(i);\n      }\n else {\n        long val=Integer.parseInt(quad);\n        if (val < 0 || val > 0xff) {\n          LocalizableMessage message=WARN_ACI_SYNTAX_INVALID_IPV4_VALUE.get(expr);\n          throw new AciException(message);\n        }\n        addrBytes[i]=(byte)(val & 0xff);\n      }\n    }\n  }\n catch (  NumberFormatException nfex) {\n    LocalizableMessage message=WARN_ACI_SYNTAX_IPV4_NOT_NUMERIC.get(expr);\n    throw new AciException(message);\n  }\n  return addrBytes;\n}\n
int numCharCountBits(int ver){\n  if (1 <= ver && ver <= 9)   return numBitsCharCount[0];\n else   if (10 <= ver && ver <= 26)   return numBitsCharCount[1];\n else   if (27 <= ver && ver <= 40)   return numBitsCharCount[2];\n else   throw new IllegalArgumentException(\"Version number out of range\");\n}\n
void componentInputMapChanged(ComponentInputMap inputMap){\n  InputMap km=getInputMap(WHEN_IN_FOCUSED_WINDOW,false);\n  while (km != inputMap && km != null) {\n    km=km.getParent();\n  }\n  if (km != null) {\n    registerWithKeyboardManager(false);\n  }\n}\n
@Override protected void shareText(final ShareParamText params) throws ShareException {\n  checkContent(params);\n  final WeiboMultiMessage weiboMessage=new WeiboMultiMessage();\n  weiboMessage.textObject=getTextObj(params);\n  allInOneShare(weiboMessage);\n}\n
@SuppressWarnings(\"unchecked\") public static <T>void sort(List<T> list,Comparator<? super T> comparator){\n  T[] array=list.toArray((T[])new Object[list.size()]);\n  Arrays.sort(array,comparator);\n  int i=0;\n  ListIterator<T> it=list.listIterator();\n  while (it.hasNext()) {\n    it.next();\n    it.set(array[i++]);\n  }\n}\n
public SMSubConfig(String id,String name,String type,String localizedName,boolean hidden){\n  this.id=id;\n  this.name=name;\n  this.type=type;\n  this.localizedName=localizedName;\n  this.hidden=hidden;\n}\n
public SizeSequence(int[] sizes){\n  this();\n  setSizes(sizes);\n}\n
public void testCase14(){\n  byte aBytes[]={1,2,3,4,5,6,7,1,2,3,4,5,6,7};\n  byte bBytes[]={10,20,30,40,50,60,70,10,20,30};\n  int aSign=-1;\n  int bSign=1;\n  byte rBytes[]={-2,-3,-4,-5,-16,-27,-38,-42,-53,-64,-75,-16,-27,-37};\n  BigInteger aNumber=new BigInteger(aSign,aBytes);\n  BigInteger bNumber=new BigInteger(bSign,bBytes);\n  BigInteger result=aNumber.subtract(bNumber);\n  byte resBytes[]=new byte[rBytes.length];\n  resBytes=result.toByteArray();\n  for (int i=0; i < resBytes.length; i++) {\n    assertTrue(resBytes[i] == rBytes[i]);\n  }\n  assertEquals(-1,result.signum());\n}\n
public DeleteContext(CSN csn,String entryUUID){\n  super(csn,entryUUID);\n}\n
public void handleButton3Request(RequestInvocationEvent event) throws ModelControlException, AMConsoleException {\n  removePageSessionAttribute(PAGE_MODIFIED);\n  backTrail();\n  try {\n    String name=(String)getPageSessionAttribute(AMAdminConstants.SAVE_VB_NAME);\n    SCConfigViewBean vb=(SCConfigViewBean)getViewBean(Class.forName(name));\n    passPgSessionMap(vb);\n    vb.forwardTo(getRequestContext());\n  }\n catch (  ClassNotFoundException e) {\n    debug.warning(\"SCSAML2SOAPBindingViewBean.handleButton3Request:\",e);\n  }\n}\n
public void resetTagDefinitions(){\n  mTagInfo=null;\n}\n
public void testClearBitPositiveOutside1(){\n  byte aBytes[]={1,-128,56,100,-2,-76,89,45,91,3,-15,35,26};\n  int aSign=1;\n  int number=150;\n  byte rBytes[]={1,-128,56,100,-2,-76,89,45,91,3,-15,35,26};\n  BigInteger aNumber=new BigInteger(aSign,aBytes);\n  BigInteger result=aNumber.clearBit(number);\n  byte resBytes[]=new byte[rBytes.length];\n  resBytes=result.toByteArray();\n  for (int i=0; i < resBytes.length; i++) {\n    assertTrue(resBytes[i] == rBytes[i]);\n  }\n  assertEquals(\"incorrect sign\",1,result.signum());\n}\n
public void reset(){\n  gsStack.removeAllElements();\n  gsStack.push(new ParserGraphicsState());\n  textMatrix=null;\n  textLineMatrix=null;\n  resourcesStack=new Stack<>();\n  isClip=false;\n  currentPath=new Path();\n}\n
public Object clone(){\n  SipUri retval=(SipUri)super.clone();\n  if (this.authority != null)   retval.authority=(Authority)this.authority.clone();\n  if (this.uriParms != null)   retval.uriParms=(NameValueList)this.uriParms.clone();\n  if (this.qheaders != null)   retval.qheaders=(NameValueList)this.qheaders.clone();\n  if (this.telephoneSubscriber != null)   retval.telephoneSubscriber=(TelephoneNumber)this.telephoneSubscriber.clone();\n  return retval;\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  Node ownerElement;\n  Attr attr;\n  doc=(Document)load(\"staffNS\",false);\n  attr=doc.createAttributeNS(\"http://www.w3.org/DOM\",\"dom:attr\");\n  ownerElement=attr.getOwnerElement();\n  assertNull(\"attrgetownerelement03\",ownerElement);\n}\n
private static boolean isValueAbsent(String s){\n  return s == null || s.length() == 0;\n}\n
@Override public void onResume(){\n  super.onResume();\n  Log.d(TAG,\"FMRadio onResume isGestureOpen = \" + isGestureOpen());\n  if (isFmRadioGestureSupport() && isGestureOpen()) {\n    resumePsensor();\n  }\n  Log.d(TAG,\"FmRadioActivity.onResume start\");\n  mIsActivityForeground=true;\n  if (null == mService) {\n    Log.d(TAG,\"service has not bind finished\");\n    mIsNeedShowNoAntennaDlg=false;\n    return;\n  }\n  updateMenuStatus();\n  updateDialogStatus();\n  if (!isRecordFileExist()) {\n    mButtonPlayback.setEnabled(false);\n  }\n  checkNoAntennaDialogInOnResume();\n  Log.d(TAG,\"FmRadioActivity.onResume end\");\n}\n
public Encoder withoutPadding(){\n  if (!doPadding)   return this;\n  return new Encoder(isURL,newline,linemax,false);\n}\n
public SelectorContext(Hashtable<String,Object> env,boolean initialContext){\n  this.env=env;\n  this.initialContext=initialContext;\n}\n
public JColorChooser(Color initialColor){\n  this(new DefaultColorSelectionModel(initialColor));\n}\n
protected boolean isIgnoredProfile(String realm){\n  return true;\n}\n
public void test_getInstanceLjava_lang_StringLjava_lang_String01() throws Exception {\n  for (  String validValue : getValidValues()) {\n    try {\n      TrustManagerFactory.getInstance(validValue,(String)null);\n      fail();\n    }\n catch (    IllegalArgumentException expected) {\n    }\n    try {\n      TrustManagerFactory.getInstance(validValue,\"\");\n      fail();\n    }\n catch (    IllegalArgumentException expected) {\n    }\n  }\n}\n
public static KeyManager[] wrap(KeyManager[] keyManagers,SortedSet<String> aliases,String componentName){\n  final KeyManager[] newKeyManagers=new KeyManager[keyManagers.length];\n  for (int i=0; i < keyManagers.length; i++) {\n    newKeyManagers[i]=new SelectableCertificateKeyManager((X509KeyManager)keyManagers[i],aliases,componentName);\n  }\n  return newKeyManagers;\n}\n
public void handleButton2Request(RequestInvocationEvent event){\n  populateValues=true;\n  repopulateMechID();\n  forwardTo();\n}\n
public static String toLatinAlphabetNumberUpperCase(int number){\n  return AlphabetNumbering.toAlphabetNumber(number,ALPHABET_UPPERCASE);\n}\n
public boolean inDaylightTime(Date date){\n  return (getOffset(date.getTime()) != rawOffset);\n}\n
public void deleteField(FieldKey genericKey){\n  if (genericKey == FieldKey.TRACK) {\n    track=0;\n  }\n else {\n    super.deleteField(genericKey);\n  }\n}\n
public MalformedURLException(){\n}\n
private boolean isDualRole(EntityDescriptorElement entityDescriptor){\n  boolean dual=false;\n  if (entityDescriptor != null) {\n    if ((SAML2MetaUtils.getSPSSODescriptor(entityDescriptor) != null) && (SAML2MetaUtils.getIDPSSODescriptor(entityDescriptor) != null)) {\n      dual=true;\n    }\n  }\n  return dual;\n}\n
public FileWriter(String fileName,boolean append) throws IOException {\n  super(new FileOutputStream(fileName,append));\n}\n
public PdfCanvas moveTextWithLeading(float x,float y){\n  currentGs.setLeading(-y);\n  contentStream.getOutputStream().writeFloat(x).writeSpace().writeFloat(y).writeSpace().writeBytes(TD);\n  return this;\n}\n
public Subject(SubjectConfirmation subjectConfirmation) throws SAMLException {\n  if (subjectConfirmation == null) {\n    if (SAMLUtilsCommon.debug.messageEnabled()) {\n      SAMLUtilsCommon.debug.message(\"Subject:  null \" + \"SubjectConfirmation specified\");\n    }\n    throw new SAMLRequesterException(SAMLUtilsCommon.bundle.getString(\"nullInput\"));\n  }\n  _subjectConfirmation=subjectConfirmation;\n}\n
public boolean acceptFile(String filePath,String fileName){\n  if (filepathMatcher == null)   return false;\n  return fileName != null && filepathMatcher.reset(fileName).matches() || filePath != null && filepathMatcher.reset(filePath).matches();\n}\n
public void runTest() throws Throwable {\n  Document doc;\n  NodeList addressList;\n  Node testNode;\n  NamedNodeMap attributes;\n  Attr domesticAttr;\n  Node s;\n  doc=(Document)load(\"staff\",false);\n  addressList=doc.getElementsByTagName(\"address\");\n  testNode=addressList.item(0);\n  attributes=testNode.getAttributes();\n  domesticAttr=(Attr)attributes.getNamedItem(\"domestic\");\n  s=domesticAttr.getNextSibling();\n  assertNull(\"attrNextSiblingNullAssert\",s);\n}\n
@Override public long dynamicQueryCount(com.liferay.portal.kernel.dao.orm.DynamicQuery dynamicQuery,com.liferay.portal.kernel.dao.orm.Projection projection){\n  return _fooLocalService.dynamicQueryCount(dynamicQuery,projection);\n}\n
@Override public void firePropertyChange(String propertyName,char oldValue,char newValue){\n}\n
public String toString(){\n  return toString(true,true);\n}\n
public Result createResult() throws XACMLException {\n  Object object=XACMLSDKUtils.getObjectInstance(XACMLConstants.RESULT);\n  if (object == null) {\n    return new ResultImpl();\n  }\n else {\n    return (Result)object;\n  }\n}\n
public void insertRow(final int row,final Vector rowData){\n  this.dataVector.insertElementAt(rowData,row);\n  justifyRows(row,row + 1);\n  fireTableRowsInserted(row,row);\n}\n
public boolean removeAll(Collection<?> c){\n  Objects.requireNonNull(c);\n  boolean modified=false;\n  if (size() > c.size()) {\n    for (Iterator<?> i=c.iterator(); i.hasNext(); )     modified|=remove(i.next());\n  }\n else {\n    for (Iterator<?> i=iterator(); i.hasNext(); ) {\n      if (c.contains(i.next())) {\n        i.remove();\n        modified=true;\n      }\n    }\n  }\n  return modified;\n}\n
private Object[] ensureCapacity(int minCapacity){\n  if (tmp.length < minCapacity) {\n    int newSize=minCapacity;\n    newSize|=newSize >> 1;\n    newSize|=newSize >> 2;\n    newSize|=newSize >> 4;\n    newSize|=newSize >> 8;\n    newSize|=newSize >> 16;\n    newSize++;\n    if (newSize < 0)     newSize=minCapacity;\n else     newSize=Math.min(newSize,a.length >>> 1);\n    @SuppressWarnings({\"unchecked\",\"UnnecessaryLocalVariable\"}) Object[] newArray=new Object[newSize];\n    tmp=newArray;\n  }\n  return tmp;\n}\n
public void paintSliderBorder(SynthContext context,Graphics g,int x,int y,int w,int h,int orientation){\n  paintSliderBorder(context,g,x,y,w,h);\n}\n
public FSSAMLServiceViewBean(){\n  super(\"FSSAMLService\");\n  setDefaultDisplayURL(DEFAULT_DISPLAY_URL);\n}\n
public void displayError(LocalizableMessage msg,LocalizableMessage title){\n  Utilities.displayError(getFrame(),msg,title);\n}\n
protected int findNext(int from){\n  if (from < -1)   return -1;\n  final int to=this.allHeaders.length - 1;\n  boolean found=false;\n  while (!found && (from < to)) {\n    from++;\n    found=filterHeader(from);\n  }\n  return found ? from : -1;\n}\n
public void addAttribute(Attribute attribute,Collection<? super ByteString> duplicateValues){\n  setAttribute(attribute,duplicateValues,false);\n}\n
